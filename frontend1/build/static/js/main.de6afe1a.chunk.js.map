{"version":3,"sources":["Actions/userAction.js","Constants/userConstants.js","Components/searchBox.js","Components/Header.js","Constants/sellerFormConstants.js","Actions/sellerFormActions.js","Components/Footer.js","Components/FormContainer.js","Components/Loader.js","Components/Message.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","Actions/templateAction.js","Constants/templateConstant.js","Screens/ProfileScreen.js","Components/Rating.js","Screens/TemplateScreen.js","Components/Template.js","Components/Parginate.js","Components/TemplateCarosel.js","Screens/HomeScreen.js","Screens/StepTwoRegisterScreen.js","Screens/templateEditScreen.js","Screens/PaymentsScreen.js","Screens/PurchasedTemplateScreen.js","Screens/UserListScreen.js","Screens/UserEditScreen.js","Screens/TemplateListScreen.js","Screens/ProfileListScreen.js","Screens/ProfilesEditScreen.js","Screens/UserProfileSettings.js","Screens/WithdrawalListScreen.js","Screens/WithdrawalEditScreen.js","Screens/CreateWithdrawalScreen.js","Screens/MyWithdrawalListScreen.js","Components/blogs.js","Actions/blogActions.js","Constants/blogConstants.js","Screens/BlogListScreen.js","Screens/BlogDetailScreen.js","Screens/BlogScreen.js","Screens/BlogEditScreen.js","Screens/ApplyForSeller.js","Screens/SellerScreen.js","Screens/RulesAndRegScreen.js","Screens/TermsAndConditionScreen.js","Screens/FaqScreen.js","Screens/AboutUsScreen.js","App.js","serviceWorker.js","store.js","Reducers/templateReducer.js","Reducers/blogReducer.js","Reducers/sellerFormReducer.js","Reducers/userReducer.js","index.js"],"names":["getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","getProfileDetails","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","placeholder","onChange","target","value","className","style","margin","Header","useSelector","state","useDispatch","userProfile","userProfileMore","profiles","createSelerForm","loading","error","createSellerForm","createdSeller","sellers","successCreate","success","useEffect","_id","createForm","post","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","onClick","localStorage","removeItem","Link","isAdmin","isSeller","isStaff","Button","Footer","Row","Col","FormContainer","children","xs","md","Loader","Spinner","animation","role","height","width","display","Message","Alert","LoginScreen","React","email","setEmail","password","setPassword","redirect","search","split","Helmet","content","setItem","JSON","stringify","details","login","Group","controlId","Label","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMesssage","userRegister","register","console","log","required","listTemplates","listTemplateDestails","templateDelete","delete","Profilescreen","userDetails","user","myTemplate","loadingMytemplate","templates","createTemplate","createdTemplate","successCreateTemplate","updateTemplate","successUpdate","deleteTemplate","successDelete","Card","Body","Title","wallet","country","nickname","Table","striped","bordered","hover","responsive","map","template","key","Image","src","thumbnail","is_paid","price","category","paidAt","color","window","confirm","Rating","text","filedownload","require","TemplateScreen","match","rating","setRating","comment","setComment","templateDetails","templateReview","errorReview","loadingReview","successReview","params","description","property","data-rh","alt","fluid","ListGroup","numReviews","creator","templatefile","responseType","then","res","catch","err","reviews","length","review","createdAt","substring","templateId","as","row","disabled","Templates","Img","Text","Parginate","pages","page","Pagination","Array","keys","x","active","TemplateCarousel","productTopRated","templateTopRated","Carousel","pause","Caption","HomeScreen","templateList","sm","lg","xl","Template","StepTwoRegisterScreen","image","setImage","occupation","setOccupation","setNickname","setCountry","uploading","setUploading","userRegisterTwo","userInfoTwo","uploadFileHandler","file","files","formData","FormData","append","registerTwo","File","label","custom","TemplateEditScreen","setTitle","setThumbnail","setCategory","setPrice","image1","setImage1","image2","setImage2","image3","setImage3","setFile","setDescription","setIs_paid","loadingUpdate","errorUpdate","Number","uploadThumbnailHandler","uploadImage1Handler","uploadImage2Handler","uploadImage3Handler","uploadZipFileHandler","put","templateUpdate","Check","checked","PaymentsScreen","templatePay","payLoading","successPay","depositWallet","successDepositWallet","templatePurchase","setWallet","profile","handledownload","alert","tittle","rounded","isPaid","amount","onSuccess","paymentResult","options","clientId","process","PurchasedTemplateScreen","purchasedTemplate","purchaseTemplate","Earnings","setEarnings","is_purchased","href","download","UserListScreen","userList","usersList","users","userDelete","deleteHandler","deleteUsers","UserEditScreen","userId","setIsAdmin","userUpdate","updateUsers","TemplateListScreen","loadingDelete","errorDelete","ProfileListScreen","profileList","profilesList","profileDelete","deleteProfiles","photo","ProfilesEditScreen","setIsSeller","setIsStaff","profileDetails","profileUpdate","updateProfiles","UserProfileSettings","profileUserUpdate","heigth","updateProfilesUser","WithdarawalListScreen","withdarawlList","withdrawalList","withdrawals","withdrawalDelete","deleteWithdrawal","withdraw","slice","accountName","accountBank_Name","accountBank_Number","payPalId","is_success","WithdrawalEditScreen","setAmount","setAccountName","setAccountBank_Name","setAccountBank_Number","setPaypalId","setIs_success","withdrawalDetails","withdrawal","withdrawalUpdate","CreateWithdrawalScreen","createWithdrawal","errorcreate","createWithdrawals","MyWithdarawalListScreen","myWithdrawal","Blogs","blog","listBlogs","listBlogsDetails","BlogListScreen","blogLists","bloglist","blogs","BlogDetailsScreen","blogDetail","blogDetails","createReview","blogCreateReview","marginTop","fontFamily","fontWeight","fonts","body","blogId","BlogScreeen","deleteBlog","createBlogss","createBlog","createdBlog","successCreateBlog","updateBlogs","updateBlog","blogDelete","setShow","author","BlogEditScreen","blogUpdate","ApplyForSellerScreen","username","setUsername","sellerDetails","seller","sellerPay","paySeller","SellerScreen","sellerList","deleteSeller","sellerDelete","RulesAndRegScreen","TermsAndConditionScreen","FaqScreen","AboutUsScreen","App","path","component","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","reducer","combineReducers","action","userWallet","wallets","decreaseWallet","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.de6afe1a.chunk.js","sourcesContent":["import {USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    \r\n    \r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    \r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_REGISTER_TWO_FAIL,\r\n    USER_REGISTER_TWO_SUCCESS,\r\n    USER_REGISTER_TWO_REQUEST,\r\n\r\n    USER_REGISTER_TWO_DETAILS_FAIL,\r\n    USER_REGISTER_TWO_DETAILS_SUCCESS,\r\n    USER_REGISTER_TWO_DETAILS_REQUEST,\r\n\r\n    USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n\r\n    GET_MY_WALLET_REQUEST,\r\n    GET_MY_WALLET_SUCCESS,\r\n    GET_MY_WALLET_FAIL,\r\n    GET_MY_WALLET_RESET,\r\n\r\n    GET_WITHDRAWALS_REQUEST,\r\n    GET_WITHDRAWALS_SUCCESS,\r\n    GET_WITHDRAWALS_FAIL,\r\n    GET_WITHDRAWALS_RESET,\r\n\r\n\r\n        \r\n    WITHDRAWAL_DETAILS_REQUEST,\r\n    WITHDRAWAL_DETAILS_SUCCESS,\r\n    WITHDRAWAL_DETAILS_FAIL,\r\n    WITHDRAWAL_DETAILS_RESET,\r\n\r\n\r\n\r\n\r\n    DEPOSIT_WALLET_REQUEST,\r\n    DEPOSIT_WALLET_SUCCESS,\r\n    DEPOSIT_WALLET_FAIL,\r\n    DEPOSIT_WALLET_RESET,\r\n\r\n    PROFILE_LIST_REQUEST,\r\n    PROFILE_LIST_SUCCESS,\r\n    PROFILE_LIST_FAIL,\r\n    PROFILE_LIST_RESET,\r\n\r\n    PROFILE_UPDATE_REQUEST,\r\n    PROFILE_UPDATE_SUCCESS,\r\n    PROFILE_UPDATE_FAIL,\r\n    PROFILE_UPDATE_RESET,\r\n\r\n    PROFILE_DETAILS_REQUEST,\r\n    PROFILE_DETAILS_SUCCESS,\r\n    PROFILE_DETAILS_FAIL,\r\n    PROFILE_DETAILS_RESET,\r\n\r\n    PROFILE_DELETE_REQUEST,\r\n    PROFILE_DELETE_SUCCESS,\r\n    PROFILE_DELETE_FAIL,\r\n\r\n    \r\n    WITHDRAWAL_UPDATE_REQUEST,\r\n    WITHDRAWAL_UPDATE_SUCCESS,\r\n    WITHDRAWAL_UPDATE_FAIL,\r\n    WITHDRAWAL_UPDATE_RESET,\r\n\r\n    WITHDRAWAL_DELETE_REQUEST,\r\n    WITHDRAWAL_DELETE_SUCCESS,\r\n    WITHDRAWAL_DELETE_FAIL,\r\n\r\n        \r\n    CREATE_WITHDRAWAL_REQUEST,\r\n    CREATE_WITHDRAWAL_SUCCESS,\r\n    CREATE_WITHDRAWAL_FAIL,\r\n    CREATE_WITHDRAWAL_RESET,\r\n\r\n    GET_MY_WITHDRAWAL_REQUEST,\r\n    GET_MY_WITHDRAWAL_FAIL,\r\n    GET_MY_WITHDRAWAL_SUCCESS,\r\n\r\n    DECREASE_WALLET_REQUEST,\r\n    DECREASE_WALLET_SUCCESS,\r\n    DECREASE_WALLET_FAIL,\r\n    DECREASE_WALLET_RESET,\r\n    PROFILE_USER_UPDATE_FAIL,\r\n    PROFILE_USER_UPDATE_SUCCESS,\r\n    PROFILE_USER_UPDATE_REQUEST,\r\n    USER_REGISTER_TWO_DETAILS_RESET,\r\n} from \"../Constants/userConstants\";\r\n\r\nimport axios from \"axios\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            'http://127.0.0.1:8000/api/user/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.details\r\n                ? error.response.data.details\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('profiles')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({type: USER_REGISTER_TWO_DETAILS_RESET})\r\n\r\n}\r\n\r\n\r\nexport const register = (name,email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            'http://127.0.0.1:8000/api/user/register/',\r\n            { 'name':name, 'email':email, 'password':password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `http://127.0.0.1:8000/api/user/${id}/`\r\n            ,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const registerTwo = (image,occupation,country,nickname) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_TWO_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `http://127.0.0.1:8000/api/user/create/profileMoreDetails/`,\r\n            {image,nickname,country,occupation},config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_TWO_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        //localStorage.setItem('profiles', JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_TWO_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const registerTwoDetails = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_TWO_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/user/myprofileMoredetails/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_TWO_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('profiles', JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_TWO_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/user/getUsers/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUsers = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/user/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUsers = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/user/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n           \r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const walletuser = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_MY_WALLET_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `api/user/mywallet/`,\r\n            config\r\n        )\r\n\r\n \r\n        dispatch({\r\n            type:GET_MY_WALLET_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_MY_WALLET_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateWallets = (profile) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DEPOSIT_WALLET_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/user/${profile._id}/updatewallet/` ,\r\n            profile,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DEPOSIT_WALLET_SUCCESS,\r\n           \r\n        })\r\n\r\n  \r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DEPOSIT_WALLET_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const decreaseWallets = (profile) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DECREASE_WALLET_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/user/${profile._id}/decreasewallet/` ,\r\n            profile,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DECREASE_WALLET_SUCCESS,\r\n           \r\n        })\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_TWO_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       \r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DECREASE_WALLET_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getWithdrawalsList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_WITHDRAWALS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/user/getwithdrawals/`\r\n            ,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_WITHDRAWALS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_WITHDRAWALS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateWithdrawal = (withdraw) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: WITHDRAWAL_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/user/${withdraw._id}/updatewithdrawal/`,\r\n            withdraw,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: WITHDRAWAL_UPDATE_SUCCESS,\r\n           \r\n        })\r\n\r\n        dispatch({\r\n            type: WITHDRAWAL_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: WITHDRAWAL_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getWithdrawalDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: WITHDRAWAL_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/user/${id}/withdrawal/`\r\n            ,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: WITHDRAWAL_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: WITHDRAWAL_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteWithdrawal = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: WITHDRAWAL_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/user/${id}/deletewithdrawal/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: WITHDRAWAL_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: WITHDRAWAL_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createWithdrawals = (amount,accountName,accountBank_Name,accountBank_Number,payPalId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_WITHDRAWAL_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/user/withdrawal/create/`,\r\n            {amount,accountName,accountBank_Name,accountBank_Number,payPalId},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: CREATE_WITHDRAWAL_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_WITHDRAWAL_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyWithdrawals = ()=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type:  GET_MY_WITHDRAWAL_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/user/mywithdrawals/`,\r\n        config)\r\n\r\n        dispatch({\r\n            type: GET_MY_WITHDRAWAL_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_MY_WITHDRAWAL_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const listProfiles = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PROFILE_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/user/getProfiles/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PROFILE_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PROFILE_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProfiles = (profile) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PROFILE_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/user/${profile._id}/updateprofiles/`,\r\n            profile,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PROFILE_UPDATE_SUCCESS,\r\n           \r\n        })\r\n\r\n        dispatch({\r\n            type: PROFILE_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProfilesUser = (profile) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PROFILE_USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/user/${profile._id}/updateprofilesuser/`,\r\n            profile,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PROFILE_USER_UPDATE_SUCCESS,\r\n           \r\n        })\r\n\r\n        dispatch({\r\n            type: PROFILE_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getProfileDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PROFILE_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/user/${id}/profilemore/`\r\n            ,\r\n            \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PROFILE_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProfiles = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PROFILE_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/user/${id}/deleteprofiles/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PROFILE_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PROFILE_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGOUT= 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST= 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS= 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL= 'USER_REGISTER_FAIL'\r\n\r\n\r\n\r\nexport const USER_DETAILS_REQUEST= 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS= 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL= 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET= 'USER_DETAILS_RESET'\r\n\r\nexport const USER_REGISTER_TWO_REQUEST= 'USER_REGISTER_TWO_REQUEST'\r\nexport const USER_REGISTER_TWO_SUCCESS= 'USER_REGISTER_TWO_SUCCESS'\r\nexport const USER_REGISTER_TWO_FAIL= 'USER_REGISTER_TWO_FAIL'\r\n\r\n\r\nexport const USER_REGISTER_TWO_DETAILS_REQUEST = 'USER_REGISTER_TWO_DETAILS_REQUEST'\r\nexport const USER_REGISTER_TWO_DETAILS_SUCCESS = 'USER_REGISTER_TWO_DETAILS_SUCCESS'\r\nexport const USER_REGISTER_TWO_DETAILS_FAIL = 'USER_REGISTER_TWO_DETAILS_FAIL'\r\nexport const USER_REGISTER_TWO_DETAILS_RESET = 'USER_REGISTER_TWO_DETAILS_RESET'\r\n\r\nexport const USER_LIST_REQUEST= 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS= 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL= 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET= 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST= 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS= 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL= 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST= 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS= 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL= 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET =' USER_UPDATE_RESET'\r\n\r\nexport const GET_MY_WALLET_REQUEST= 'GET_MY_WALLET_REQUEST'\r\nexport const GET_MY_WALLET_SUCCESS= 'GET_MY_WALLET_SUCCESS'\r\nexport const GET_MY_WALLET_FAIL= 'GET_MY_WALLET_FAIL'\r\nexport const GET_MY_WALLET_RESET =' GET_MY_WALLET_RESET'\r\n\r\nexport const DEPOSIT_WALLET_REQUEST= 'DEPOSIT_WALLET_REQUEST'\r\nexport const DEPOSIT_WALLET_SUCCESS= 'DEPOSIT_WALLET_SUCCESS'\r\nexport const DEPOSIT_WALLET_FAIL= 'DEPOSIT_WALLET_FAIL'\r\nexport const DEPOSIT_WALLET_RESET =' DEPOSIT_WALLET_RESET'\r\n\r\nexport const DECREASE_WALLET_REQUEST= 'DECREASE_WALLET_REQUEST'\r\nexport const DECREASE_WALLET_SUCCESS= 'DECREASE_WALLET_SUCCESS'\r\nexport const DECREASE_WALLET_FAIL= 'DECREASE_WALLET_FAIL'\r\nexport const DECREASE_WALLET_RESET =' DECREASE_WALLET_RESET'\r\n\r\nexport const GET_WITHDRAWALS_REQUEST= 'GET_WITHDRAWALS_REQUEST'\r\nexport const GET_WITHDRAWALS_SUCCESS= 'GET_WITHDRAWALS_SUCCESS'\r\nexport const GET_WITHDRAWALS_FAIL= 'GET_WITHDRAWALS_FAIL'\r\nexport const GET_WITHDRAWALS_RESET =' GET_WITHDRAWALS_RESET'\r\n\r\nexport const WITHDRAWAL_UPDATE_REQUEST= 'WITHDRAWAL_UPDATE_REQUEST'\r\nexport const WITHDRAWAL_UPDATE_SUCCESS= 'WITHDRAWAL_UPDATE_SUCCESS'\r\nexport const WITHDRAWAL_UPDATE_FAIL= 'WITHDRAWAL_UPDATE_FAIL'\r\nexport const WITHDRAWAL_UPDATE_RESET =' WITHDRAWAL_UPDATE_RESET'\r\n\r\nexport const WITHDRAWAL_DETAILS_REQUEST= 'WITHDRAWAL_DETAILS_REQUEST'\r\nexport const WITHDRAWAL_DETAILS_SUCCESS= 'WITHDRAWAL_DETAILS_SUCCESS'\r\nexport const WITHDRAWAL_DETAILS_FAIL= 'WITHDRAWAL_DETAILS_FAIL'\r\nexport const WITHDRAWAL_DETAILS_RESET= 'WITHDRAWAL_DETAILS_RESET'\r\n\r\n\r\nexport const WITHDRAWAL_DELETE_REQUEST= 'WITHDRAWAL_DELETE_REQUEST'\r\nexport const WITHDRAWAL_DELETE_SUCCESS= 'WITHDRAWAL_DELETE_SUCCESS'\r\nexport const WITHDRAWAL_DELETE_FAIL= 'WITHDRAWAL_DELETE_FAIL'\r\n\r\n\r\nexport const CREATE_WITHDRAWAL_REQUEST = \"CREATE_WITHDRAWAL_REQUEST\"\r\nexport const CREATE_WITHDRAWAL_SUCCESS = \"CREATE_WITHDRAWAL_SUCCESS\"\r\nexport const CREATE_WITHDRAWAL_FAIL = \"CREATE_WITHDRAWAL_FAIL\"\r\nexport const CREATE_WITHDRAWAL_RESET = \"CREATE_WITHDRAWAL_RESET\"\r\n\r\n\r\nexport const GET_MY_WITHDRAWAL_REQUEST= 'GET_MY_WITHDRAWAL_REQUEST'\r\nexport const GET_MY_WITHDRAWAL_SUCCESS= 'GET_MY_WITHDRAWAL_SUCCESS'\r\nexport const GET_MY_WITHDRAWAL_FAIL= 'GET_MY_WITHDRAWAL_FAIL'\r\nexport const GET_MY_WITHDRAWAL_RESET =' GET_MY_WITHDRAWAL_RESET'\r\n\r\n\r\n\r\n\r\n\r\nexport const PROFILE_LIST_REQUEST= 'PROFILE_LIST_REQUEST'\r\nexport const PROFILE_LIST_SUCCESS= 'PROFILE_LIST_SUCCESS'\r\nexport const PROFILE_LIST_FAIL= 'PROFILE_LIST_FAIL'\r\nexport const PROFILE_LIST_RESET =' PROFILE_LIST_RESET'\r\n\r\nexport const PROFILE_UPDATE_REQUEST= 'PROFILE_UPDATE_REQUEST'\r\nexport const PROFILE_UPDATE_SUCCESS= 'PROFILE_UPDATE_SUCCESS'\r\nexport const PROFILE_UPDATE_FAIL= 'PROFILE_UPDATE_FAIL'\r\nexport const PROFILE_UPDATE_RESET =' PROFILE_UPDATE_RESET'\r\n\r\n\r\nexport const PROFILE_USER_UPDATE_REQUEST= 'PROFILE_USER_UPDATE_REQUEST'\r\nexport const PROFILE_USER_UPDATE_SUCCESS= 'PROFILE_USER_UPDATE_SUCCESS'\r\nexport const PROFILE_USER_UPDATE_FAIL= 'PROFILE_USER_UPDATE_FAIL'\r\nexport const PROFILE_USER_UPDATE_RESET =' PROFILE_USER_UPDATE_RESET'\r\n\r\n\r\nexport const PROFILE_DETAILS_REQUEST= 'PROFILE_DETAILS_REQUEST'\r\nexport const PROFILE_DETAILS_SUCCESS= 'PROFILE_DETAILS_SUCCESS'\r\nexport const PROFILE_DETAILS_FAIL= 'PROFILE_DETAILS_FAIL'\r\nexport const PROFILE_DETAILS_RESET= 'PROFILE_DETAILS_RESET'\r\n\r\n\r\nexport const PROFILE_DELETE_REQUEST= 'PROFILE_DELETE_REQUEST'\r\nexport const PROFILE_DELETE_SUCCESS= 'PROFILE_DELETE_SUCCESS'\r\nexport const PROFILE_DELETE_FAIL= 'PROFILE_DELETE_FAIL'\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                placeholder='search for template here'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5 '\r\n                \r\n                style={{\r\n                    margin: '20px'\r\n                }}\r\n                \r\n            ></Form.Control>\r\n\r\n           \r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, { useEffect } from 'react'; \r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { Navbar,Nav,Container,NavDropdown, Button} from \"react-bootstrap\";\r\nimport {LinkContainer,} from 'react-router-bootstrap'\r\nimport { FaCartPlus, FaNewspaper, FaQuestion, FaUser} from 'react-icons/fa'\r\nimport { logout } from \"../Actions/userAction\";\r\nimport SearchBox from './searchBox';\r\nimport { createSellerFormm } from '../Actions/sellerFormActions';\r\nimport { CREATE_SELLER_FORM_RESET } from '../Constants/sellerFormConstants';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const dispatch = useDispatch()\r\n    \r\n   \r\n    const userProfile = useSelector(state => state.userProfileMore)\r\n    const {profiles, loading, error} = userProfile\r\n\r\n    const createSelerForm = useSelector(state => state.createSellerForm)\r\n    const {loading:loadingcreate, error: errorcreate, sellers:createdSeller,\r\n        success:successCreate} = createSelerForm\r\n\r\n\r\n    let history = useHistory()\r\n\r\n\r\n    useEffect(()=>{\r\n        if(successCreate){\r\n            dispatch({type: CREATE_SELLER_FORM_RESET})\r\n            history.push(`/applyforseller/${createdSeller._id}/pay/`)\r\n        }\r\n      \r\n        \r\n    },[dispatch,history,successCreate])\r\n\r\n\r\n\r\n  \r\n    \r\n    const createForm = ()=>{\r\n        dispatch(createSellerFormm())\r\n    }\r\n\r\n    const lg = () => {\r\n       dispatch(logout())\r\n      \r\n         \r\n    }\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Navbar  bg=\"info\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                    <Container>\r\n                    <LinkContainer to='/'>\r\n                    <Navbar.Brand > .PLPFACTORY</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                       \r\n                        <Nav className=\"ml-auto pull-right \" >\r\n                        {userInfo ? (\r\n                                    <NavDropdown title={userInfo.name} id=\"username\">\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item >\r\n                                            Profile\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <LinkContainer to={`/profile/settings/${profiles?._id}`}  >\r\n                                            <NavDropdown.Item >\r\n                                                \r\n                                                settings\r\n                                                \r\n                                            \r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                   \r\n\r\n\r\n                                        <NavDropdown.Item onClick={lg}>Logout</NavDropdown.Item>\r\n\r\n                                    </NavDropdown> \r\n                                ): <LinkContainer to='/login'>\r\n                                <Nav.Link><FaUser style={{margin: \"5\"}}/>Login</Nav.Link>\r\n                            </LinkContainer>}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Users\r\n                                        </NavDropdown.Item>\r\n                                    \r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/templatelist'>\r\n                                        <NavDropdown.Item>\r\n                                            Template\r\n                                        </NavDropdown.Item>\r\n                                    \r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/blogs'>\r\n                                     <NavDropdown.Item>\r\n                                         Blog Screen\r\n                                     </NavDropdown.Item>\r\n                                 </LinkContainer>\r\n\r\n                                    \r\n                                    <LinkContainer to='/admin/profilelist'>\r\n                                        <NavDropdown.Item>\r\n                                            Users Profile\r\n                                        </NavDropdown.Item>\r\n                                    \r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/sellers'>\r\n                                        <NavDropdown.Item>\r\n                                            All Seller Form\r\n                                        </NavDropdown.Item>\r\n                                    \r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/withdrawallist'>\r\n                                        <NavDropdown.Item>\r\n                                           Withdrawal History\r\n                                        </NavDropdown.Item>\r\n                                    \r\n                                    </LinkContainer>\r\n                                   \r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                            {profiles?.isSeller && (\r\n                                <NavDropdown title='Seller' id='profile'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>\r\n                                            Profile\r\n                                        </NavDropdown.Item>\r\n                                    \r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/withdraw/'  >\r\n                                            <NavDropdown.Item >\r\n                                                \r\n                                                Apply for withdrawal\r\n                                                \r\n                                            \r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                    <LinkContainer to='/mywithdrawal'>\r\n                                        <NavDropdown.Item>\r\n                                           Withdrawal History\r\n                                        </NavDropdown.Item>\r\n                                    \r\n                                    </LinkContainer>\r\n                              \r\n                                   \r\n                                </NavDropdown>\r\n                            )}\r\n                           \r\n\r\n                           {profiles?.isStaff && (\r\n                                <NavDropdown title='STAFF' id='staffmenu'>\r\n                                    <LinkContainer to='/admin/blogs'>\r\n                                     <NavDropdown.Item>\r\n                                         Blog Screen\r\n                                     </NavDropdown.Item>\r\n                                 </LinkContainer>\r\n                                   \r\n                              \r\n                                   \r\n                                </NavDropdown>\r\n                            )}\r\n                           \r\n\r\n\r\n\r\n\r\n\r\n                           <LinkContainer to='/blogs'>\r\n                                <Nav.Link><FaNewspaper style={{margin: \"5\"}}/>Blog</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            <LinkContainer to='/faq'>\r\n                                <Nav.Link><FaQuestion style={{margin: \"5\"}}/>Faqs</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            <LinkContainer to='/rules'>\r\n                                <Nav.Link><FaCartPlus style={{margin: \"5\"}}/>Guide for Sellers</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            <LinkContainer to='/terms'>\r\n                                <Nav.Link>Privacy and Policy</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n\r\n\r\n                            { userInfo && !profiles?.isSeller && (\r\n                                <Button onClick={e =>createForm()}><FaCartPlus style={{margin: \"5\"}}/>Apply For Seller Account</Button>\r\n                            ) }\r\n\r\n\r\n                            \r\n\r\n                           \r\n\r\n                           \r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                    \r\n\r\n                    \r\n                    </Container>\r\n\r\n\r\n                </Navbar>\r\n            </header>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","\r\nexport const CREATE_SELLER_FORM_REQUEST = \"CREATE_SELLER_FORM_REQUEST\"\r\nexport const CREATE_SELLER_FORM_SUCCESS = \"CREATE_SELLER_FORM_SUCCESS\"\r\nexport const CREATE_SELLER_FORM_FAIL = \"CREATE_SELLER_FORM_FAIL\"\r\nexport const CREATE_SELLER_FORM_RESET = \"CREATE_SELLER_FORM_RESET\"\r\n\r\n\r\nexport const SELLER_FORM_LIST_REQUEST = \"SELLER_FORM_LIST_REQUEST\"\r\nexport const SELLER_FORM_LIST_SUCCESS = \"SELLER_FORM_LIST_SUCCESS\"\r\nexport const SELLER_FORM_LIST_FAIL = \"SELLER_FORM_LIST_FAIL\"\r\n\r\nexport const SELLER_FORM_DETAILS_REQUEST = \"SELLER_FORM_DETAILS_REQUEST\"\r\nexport const SELLER_FORM_DETAILS_SUCCESS = \"SELLER_FORM_DETAILS_SUCCESS\"\r\nexport const SELLER_FORM_DETAILS_FAIL = \"SELLER_FORM_DETAILS_FAIL\"\r\nexport const SELLER_FORM_DETAILS_RESET = \"SELLER_FORM_DETAILS_RESET\"\r\n\r\n\r\nexport const SELLER_PAY_REQUEST = \"SELLER_PAY_REQUEST\"\r\nexport const SELLER_PAY_SUCCESS = \"SELLER_PAY_SUCCESS\"\r\nexport const SELLER_PAY_FAIL = \"SELLER_PAY_FAIL\"\r\nexport const SELLER_PAY_RESET = \"SELLER_PAY_RESET\"\r\n\r\nexport const DELETE_SELLER_FORM_REQUEST = \"DELETE_SELLER_FORM_REQUEST\"\r\nexport const DELETE_SELLER_FORM_SUCCESS = \"DELETE_SELLER_FORM_SUCCESS\"\r\nexport const DELETE_SELLER_FORM_FAIL = \" DELETE_SELLER_FORM_FAIL\"\r\n","import axios from \"axios\"\r\nimport { CREATE_SELLER_FORM_FAIL,\r\n    CREATE_SELLER_FORM_REQUEST, \r\n    CREATE_SELLER_FORM_RESET,\r\n     CREATE_SELLER_FORM_SUCCESS,\r\n    \r\n     DELETE_SELLER_FORM_FAIL,\r\n    \r\n     DELETE_SELLER_FORM_REQUEST,\r\n    \r\n     DELETE_SELLER_FORM_SUCCESS,\r\n    \r\n     SELLER_FORM_DETAILS_FAIL,\r\n    \r\n     SELLER_FORM_DETAILS_REQUEST,\r\n    \r\n     SELLER_FORM_DETAILS_SUCCESS,\r\n    \r\n     SELLER_FORM_LIST_FAIL,\r\n    \r\n     SELLER_FORM_LIST_REQUEST,\r\n    \r\n     SELLER_FORM_LIST_SUCCESS,\r\n    \r\n     SELLER_PAY_FAIL, \r\n     SELLER_PAY_REQUEST,\r\n     SELLER_PAY_RESET,\r\n     SELLER_PAY_SUCCESS} from \"../Constants/sellerFormConstants\"\r\n\r\n\r\nexport const createSellerFormm = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_SELLER_FORM_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/seller/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: CREATE_SELLER_FORM_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_SELLER_FORM_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const paySeller = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SELLER_PAY_REQUEST\r\n        }) \r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/seller/${id}/pay/`,\r\n        paymentResult,\r\n        config\r\n        )\r\n\r\n        dispatch({\r\n            type: SELLER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SELLER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getSellerDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SELLER_FORM_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/seller/${id}/`\r\n            ,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: SELLER_FORM_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SELLER_FORM_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listSellers = () => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({ type: SELLER_FORM_LIST_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/seller/sellers/`,config)\r\n\r\n        dispatch({\r\n            type: SELLER_FORM_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SELLER_FORM_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const sellerDelete = (id)=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type: DELETE_SELLER_FORM_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`/api/seller/${id}/delete/`,\r\n        config)\r\n\r\n        dispatch({\r\n            type: DELETE_SELLER_FORM_SUCCESS,\r\n        \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_SELLER_FORM_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport { Container,Col,Row } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                \r\n                <Row>\r\n         \r\n                <Col className=\"text-center py-3\">Copyright &copy; 2021-2022 || <Link to='terms'>Terms and Conditions</Link> || <Link to='aboutus'>About PlpFactory</Link> || <Link to='faq'>Faqs</Link> </Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","// @flow strict\r\n\r\nimport React from 'react';\r\nimport { Container,Row,Col } from \"react-bootstrap\";\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>{children}</Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role=\"status\"\r\n            style={{\r\n                height: '100px',\r\n                width: \"100px\",\r\n                margin: 'auto',\r\n                display : 'block',\r\n            }}\r\n        >\r\n           \r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;","// @flow strict\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nimport * as React from 'react';\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default Message;","// @flow strict\r\n// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row,Col,Form,Button } from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport { login } from '../Actions/userAction';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\nimport Helmet from 'react-helmet';\r\n\r\n\r\nfunction LoginScreen({history,location}) {\r\n    const [email, setEmail] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const redirect = location.search ? location.search.split('m')[1] : '/'\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {loading,error,userInfo} = userLogin\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    React.useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n      \r\n    }, [history,userInfo,redirect])\r\n    \r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n  \r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Sign In</title>\r\n                <meta name='description' content='login page || kindly login befor you can cotinue' />\r\n            </Helmet>\r\n\r\n        {loading? <Loader/> : error? <Message variant=\"dander\">{error}</Message>:\r\n        (\r\n            <FormContainer>\r\n\r\n                \r\n            <h1>Sign In</h1>\r\n            {error && <Message variant=\"danger\">invalid credentials</Message>}\r\n            {loading && <Loader/>}\r\n\r\n\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>UserName</Form.Label>\r\n                    <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your username here\"\r\n                    value={email} \r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your Password here\"\r\n                    value={password} \r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">Sign In</Button>\r\n\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Customer? <Link  to={'/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n            </FormContainer>\r\n        )\r\n        }\r\n        \r\n    </>\r\n       \r\n    )\r\n};\r\n\r\nexport default LoginScreen;","\r\nimport * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row,Col,Form,Button } from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport { register } from '../Actions/userAction';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport Helmet from 'react-helmet';\r\n\r\n\r\n\r\n\r\n\r\nfunction RegisterScreen({location,history}) {\r\n    const [name, setName] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n    const [confirmPassword, setConfirmPassword] = React.useState('')\r\n    const [message, setMesssage] = React.useState('')\r\n\r\n\r\n    //const redirect = location.search ? location.search.split('m')[1] : '/'\r\n    \r\n    const redirect = location.search ? location.search.split('m')[1] : '/'\r\n    const userRegister = useSelector(state=> state.userRegister)\r\n    const {loading,error,userInfo} = userRegister\r\n    const dispatch = useDispatch()\r\n    \r\n    React.useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history,userInfo,redirect])\r\n    \r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMesssage('password does not match')\r\n        }else{\r\n            dispatch(register(name,email,password))\r\n        }\r\n        history.push(\"register/two/\")\r\n       console.log(\"register\")\r\n         \r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Helmet>\r\n                <title>Register</title>\r\n            </Helmet>\r\n\r\n           \r\n        <h1>Register</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader/>}\r\n        \r\n        {message && <Message variant=\"danger\">{message}</Message> }\r\n\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>UserName</Form.Label>\r\n                <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter your username here\"\r\n                value={name} \r\n                onChange={(e)=>setName(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                required\r\n                type=\"Email\"\r\n                placeholder=\"Enter your email here\"\r\n                value={email} \r\n                onChange={(e)=>setEmail(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n          \r\n\r\n            <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"Enter your Password here\"\r\n                value={password} \r\n                onChange={(e)=>setPassword(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirm-password\">\r\n                <Form.Label>Confirm password</Form.Label>\r\n                <Form.Control\r\n                required\r\n                type=\"password\"\r\n                placeholder=\"Enter your Password here\"\r\n                value={confirmPassword} \r\n                onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            \r\n            <Button type=\"submit\" variant=\"primary\">Sign In</Button>\r\n\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n            <Col>\r\n            Already have ancount? <Link  to={redirect? `/login?redirect=${redirect}`: '/login'}>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default RegisterScreen;","import { TEMPLATE_LIST_REQUEST,\r\n    TEMPLATE_LIST_SUCCESS,\r\n    TEMPLATE_LIST_FAIL,\r\n\r\n    TEMPLATE_DETAILS_REQUEST,\r\n    TEMPLATE_DETAILS_SUCCESS,\r\n    TEMPLATE_DETAILS_FAIL,\r\n\r\n    CREATE_TEMPLATE_FAIL,\r\n    CREATE_TEMPLATE_SUCCESS,\r\n    CREATE_TEMPLATE_REQUEST,\r\n    CREATE_TEMPLATE_RESET,\r\n\r\n    MY_TEMPLATE_FAIL,\r\n    MY_TEMPLATE_SUCCESS,\r\n    MY_TEMPLATE_REQUEST,\r\n    MY_TEMPLATE_RESET,\r\n\r\n   \r\n\r\n    UPDATE_TEMPLATE_FAIL,\r\n    UPDATE_TEMPLATE_REQUEST,\r\n    UPDATE_TEMPLATE_SUCCESS,\r\n    UPDATE_TEMPLATE_RESET,\r\n\r\n    DELETE_TEMPLATE_FAIL,\r\n    DELETE_TEMPLATE_REQUEST,\r\n    DELETE_TEMPLATE_SUCCESS,\r\n\r\n    TEMPLATE_PURCHASE_SUCCESS,\r\n    TEMPLATE_PURCHASE_REQUEST,\r\n    TEMPLATE_PURCHASE_FAIL,\r\n\r\n    PAY_TEMPLATE_FAIL,\r\n    PAY_TEMPLATE_REQUEST,\r\n    PAY_TEMPLATE_SUCCESS,\r\n    PAY_TEMPLATE_RESET,\r\n\r\n    PAID_TEMPLATE_FAIL,\r\n    PAID_TEMPLATE_REQUEST,\r\n    PAID_TEMPLATE_SUCCESS,\r\n    PAID_TEMPLATE_RESET,\r\n\r\n    REVIEW_TEMPLATE_FAIL,\r\n    REVIEW_TEMPLATE_REQUEST,\r\n    REVIEW_TEMPLATE_SUCCESS,\r\n    REVIEW_TEMPLATE_RESET,\r\n\r\n    DOWNLOAD_TEMPLATE_FAIL,\r\n    DOWNLOAD_TEMPLATE_REQUEST,\r\n    DOWNLOAD_TEMPLATE_SUCCESS,\r\n    DOWNLOAD_TEMPLATE_RESET,\r\n    TEMPLATES_TOP_REQUEST,\r\n    TEMPLATES_TOP_SUCCESS,\r\n    TEMPLATES_TOP_FAIL,\r\n\r\n } from \"../Constants/templateConstant\"\r\n\r\nimport axios from \"axios\"\r\n\r\nexport const listTemplates = (keyword= '')=> async (dispatch)=>{\r\n    try {\r\n        dispatch({ type: TEMPLATE_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/templates/${keyword}`)\r\n\r\n        dispatch({\r\n            type: TEMPLATE_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TEMPLATE_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTemplateDestails = (id)=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type: TEMPLATE_DETAILS_REQUEST })\r\n\r\n       // const {\r\n        //    userLogin: { userInfo },\r\n        //} = getState()\r\n\r\n        //const config = {\r\n        //    headers: {\r\n        //        'Content-type': 'application/json',\r\n        //        Authorization: `Bearer ${userInfo.token}`\r\n         //   }\r\n       // }\r\n\r\n        const { data } = await axios.get(`/api/template/${id}`,)\r\n\r\n        dispatch({\r\n            type: TEMPLATE_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TEMPLATE_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createTemplates = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_TEMPLATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/templates/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: CREATE_TEMPLATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_TEMPLATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyTemplates = ()=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type:  MY_TEMPLATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/templates/mytemplate/`,\r\n        config)\r\n\r\n        dispatch({\r\n            type: MY_TEMPLATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_TEMPLATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const templateUpdate = (template)=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type: UPDATE_TEMPLATE_REQUEST, })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/${template._id}/template/update/`,\r\n        template,\r\n        config)\r\n\r\n        dispatch({\r\n           type: UPDATE_TEMPLATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: TEMPLATE_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_TEMPLATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const templateDelete = (id)=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type: DELETE_TEMPLATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`/api/${id}/template/delete/`,\r\n        config)\r\n\r\n        dispatch({\r\n            type: DELETE_TEMPLATE_SUCCESS,\r\n        \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_TEMPLATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const purchaseTemplate = (id)=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type: TEMPLATE_PURCHASE_REQUEST })\r\n\r\n       // const {\r\n        //    userLogin: { userInfo },\r\n        //} = getState()\r\n\r\n        //const config = {\r\n        //    headers: {\r\n        //        'Content-type': 'application/json',\r\n        //        Authorization: `Bearer ${userInfo.token}`\r\n         //   }\r\n       // }\r\n\r\n        const { data } = await axios.get(`/api/template/${id}`,)\r\n\r\n        dispatch({\r\n            type: TEMPLATE_PURCHASE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TEMPLATE_PURCHASE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payTemplate = (id,paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type:  PAY_TEMPLATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/${id}/template/pay/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:  PAY_TEMPLATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:  PAY_TEMPLATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const paidTemplate = (id)=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type:  PAID_TEMPLATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/template/${id}`,config)\r\n\r\n        dispatch({\r\n            type:  PAID_TEMPLATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:  PAID_TEMPLATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createTemplateReview = (templateId,review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: REVIEW_TEMPLATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/${templateId}/template/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: REVIEW_TEMPLATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REVIEW_TEMPLATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopTemplate = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: TEMPLATES_TOP_REQUEST\r\n        })\r\n\r\n      \r\n\r\n        const { data } = await axios.get(\r\n            `/api/templates/top/rated/`,\r\n        )\r\n        dispatch({\r\n            type: TEMPLATES_TOP_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TEMPLATES_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","export const TEMPLATE_LIST_REQUEST = \"TEMPLATE_LIST_REQUEST\"\r\nexport const TEMPLATE_LIST_SUCCESS = \"TEMPLATE_LIST_SUCCESS\"\r\nexport const TEMPLATE_LIST_FAIL = \"TEMPLATE_LIST_FAIL\"\r\n\r\nexport const TEMPLATE_DETAILS_REQUEST = \"TEMPLATE_DETAILS_REQUEST\"\r\nexport const TEMPLATE_DETAILS_SUCCESS = \"TEMPLATE_DETAILS_SUCCESS\"\r\nexport const TEMPLATE_DETAILS_FAIL = \"TEMPLATE_DETAILS_FAIL\"\r\n\r\nexport const CREATE_TEMPLATE_REQUEST = \"CREATE_TEMPLATE_REQUEST\"\r\nexport const CREATE_TEMPLATE_SUCCESS = \"CREATE_TEMPLATE_SUCCESS\"\r\nexport const CREATE_TEMPLATE_FAIL = \"CREATE_TEMPLATE_FAIL\"\r\nexport const CREATE_TEMPLATE_RESET = \"CREATE_TEMPLATE_RESET\"\r\n\r\nexport const MY_TEMPLATE_REQUEST = \"MY_TEMPLATE_REQUEST\"\r\nexport const MY_TEMPLATE_SUCCESS = \"MY_TEMPLATE_SUCCESS\"\r\nexport const MY_TEMPLATE_FAIL = \"MY_TEMPLATE_FAIL\"\r\nexport const MY_TEMPLATE_RESET = \"MY_TEMPLATE_RESET\"\r\n\r\nexport const UPDATE_TEMPLATE_REQUEST = \"UPDATE_TEMPLATE_REQUEST\"\r\nexport const UPDATE_TEMPLATE_SUCCESS = \"UPDATE_TEMPLATE_SUCCESS\"\r\nexport const UPDATE_TEMPLATE_FAIL = \"UPDATE_TEMPLATE_FAIL\"\r\nexport const UPDATE_TEMPLATE_RESET = \"UPDATE_TEMPLATE_RESET\"\r\n\r\n\r\nexport const DELETE_TEMPLATE_REQUEST = \"DELETE_TEMPLATE_REQUEST\"\r\nexport const DELETE_TEMPLATE_SUCCESS = \"DELETE_TEMPLATE_SUCCESS\"\r\nexport const DELETE_TEMPLATE_FAIL = \" DELETE_TEMPLATE_FAIL\"\r\n\r\n\r\nexport const TEMPLATE_PURCHASE_REQUEST = \"TEMPLATE_PURCHASE_REQUEST\"\r\nexport const TEMPLATE_PURCHASE_SUCCESS = \"TEMPLATE_PURCHASE_SUCCESS\"\r\nexport const TEMPLATE_PURCHASE_FAIL = \" TEMPLATE_PURCHASE_FAIL\"\r\nexport const TEMPLATE_PURCHASE_RESET = \" TEMPLATE_PURCHASE_RESET\"\r\n\r\n\r\nexport const PAY_TEMPLATE_REQUEST = \"PAY_TEMPLATE_REQUEST\"\r\nexport const PAY_TEMPLATE_SUCCESS = \"PAY_TEMPLATE_SUCCESS\"\r\nexport const PAY_TEMPLATE_FAIL = \"PAY_TEMPLATE_FAIL\"\r\nexport const PAY_TEMPLATE_RESET = \"PAY_TEMPLATE_RESET\"\r\n\r\n\r\nexport const PAID_TEMPLATE_REQUEST = \"PAID_TEMPLATE_REQUEST\"\r\nexport const PAID_TEMPLATE_SUCCESS = \"PAID_TEMPLATE_SUCCESS\"\r\nexport const PAID_TEMPLATE_FAIL = \"PAID_TEMPLATE_FAIL\"\r\nexport const PAID_TEMPLATE_RESET = \"PAID_TEMPLATE_RESET\"\r\n\r\n\r\n\r\nexport const REVIEW_TEMPLATE_REQUEST = \"REVIEW_TEMPLATE_REQUEST\"\r\nexport const REVIEW_TEMPLATE_SUCCESS = \"REVIEW_TEMPLATE_SUCCESS\"\r\nexport const REVIEW_TEMPLATE_FAIL = \"REVIEW_TEMPLATE_FAIL\"\r\nexport const REVIEW_TEMPLATE_RESET = \"REVIEW_TEMPLATE_RESET\"\r\n\r\n\r\nexport const DOWNLOAD_TEMPLATE_REQUEST = \"DOWNLOAD_TEMPLATE_REQUEST\"\r\nexport const DOWNLOAD_TEMPLATE_SUCCESS = \"DOWNLOAD_TEMPLATE_SUCCESS\"\r\nexport const DOWNLOAD_TEMPLATE_FAIL = \"DOWNLOAD_TEMPLATE_FAIL\"\r\nexport const DOWNLOAD_TEMPLATE_RESET = \"DOWNLOAD_TEMPLATE_RESET\"\r\n\r\n\r\n\r\nexport const TEMPLATES_TOP_REQUEST = 'TEMPLATES_TOP_REQUEST'\r\nexport const TEMPLATES_TOP_SUCCESS = 'TEMPLATES_TOP_SUCCESS'\r\nexport const TEMPLATES_TOP_FAIL = 'TEMPLATES_TOP_FAIL'","// @flow strict\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table,Card,Modal, Image } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport {  FaCheck, FaEdit, FaPlus, FaTrash} from 'react-icons/fa'\r\nimport { getUserDetails, registerTwoDetails } from '../Actions/userAction'\r\nimport { listMyTemplates,createTemplates, templateDelete } from '../Actions/templateAction'\r\nimport { CREATE_TEMPLATE_RESET } from '../Constants/templateConstant'\r\nimport Helmet from 'react-helmet'\r\n\r\n\r\n\r\n\r\n\r\nfunction Profilescreen({history}) {\r\n\r\n    \r\n    const userDetails = useSelector(state =>state.userDetails)\r\n    const {loading:userDetailsLoading, error:userDetailsError , user} = userDetails\r\n    const userLogin = useSelector(state => state.userLogin )\r\n    const {userInfo} = userLogin\r\n    \r\n    \r\n \r\n    const myTemplate = useSelector(state => state.myTemplate)\r\n    const {loading:loadingMytemplate, error: errorMytemplate, templates} = myTemplate\r\n\r\n    const createTemplate = useSelector(state => state.createTemplate)\r\n    const {loading:loadingcreateTemplate, error: errorcreateTemplate,\r\n        templates: createdTemplate,\r\n        success:successCreateTemplate} = createTemplate\r\n\r\n    const updateTemplate = useSelector(state => state.updateTemplate)\r\n    const {loading:loadingUpdate, error:errorUpdate, success:successUpdate, } = updateTemplate\r\n\r\n    const deleteTemplate = useSelector(state => state.deleteTemplate)\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete,} = deleteTemplate\r\n\r\n    const userProfile = useSelector(state => state.userProfileMore)\r\n    const {profiles, loading, error, } = userProfile\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n   useEffect(()=>{\r\n       dispatch({type: CREATE_TEMPLATE_RESET})\r\n     \r\n       if(!userInfo){\r\n           history.push('/login')\r\n       }\r\n       if(successCreateTemplate){\r\n            \r\n        history.push(`/admin/template/${createdTemplate._id}/edit`)\r\n        \r\n    }\r\n    else{\r\n        dispatch( listMyTemplates())\r\n       \r\n        \r\n        \r\n        if (!user || !user.name || userInfo.name !== user.name  ) {\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(registerTwoDetails ())\r\n  \r\n        } \r\n        \r\n       \r\n       }\r\n\r\n     \r\n   },[userInfo,dispatch,history,successCreateTemplate,createdTemplate,successUpdate,successDelete,])\r\n\r\n  \r\n   const deleteHandler= (id)=>{\r\n       \r\n    if (window.confirm('Are you sure you want to delete this template?')) {\r\n        dispatch(templateDelete(id))\r\n    }\r\n \r\n   \r\n   }\r\n\r\n   \r\n   const createTemplateHandler= (e)=>{\r\n    dispatch(createTemplates())\r\n    console.log(\"created\")\r\n}\r\n const [show, setShow] = useState(false)\r\n const handleClose= ()=>{\r\n     setShow(false)\r\n }\r\n\r\n const handleShow= ()=>{\r\n    setShow(true)\r\n}\r\n\r\n    \r\n    \r\n\r\n  \r\n  \r\n\r\n   \r\n    return (\r\n        \r\n        <div>\r\n            <Helmet>\r\n                <title>My Profile</title>\r\n            </Helmet>\r\n            \r\n          \r\n            <Row>\r\n            \r\n            <Col>\r\n             <h2>MY PROFILE</h2>\r\n              <Card className=\"my-3 p-3 rounded\">\r\n              {loading  && (<Loader/>)}\r\n                  <Card.Body >\r\n                      <Card.Title>\r\n                          USERNAME:\r\n                          <h3>{userInfo?.name}</h3>\r\n                          </Card.Title>\r\n                          \r\n                          \r\n                     \r\n                      <Card.Title>\r\n                      Wallet:\r\n                      <h4>${profiles?.wallet}</h4>\r\n                      </Card.Title>\r\n\r\n                      <Card.Title>\r\n                      country:\r\n                      <h4>{profiles?.country}</h4>\r\n                      </Card.Title>\r\n\r\n                      <Card.Title>\r\n                      nickname:\r\n                      <h4>{profiles?.nickname}</h4>\r\n                      </Card.Title>\r\n\r\n\r\n                      \r\n                   \r\n                  </Card.Body>\r\n\r\n              </Card>\r\n             </Col>\r\n             <Col>\r\n             <Row className='align-items-center'>\r\n             <Col>\r\n                    <h1>My Templates</h1>\r\n                </Col>\r\n                \r\n            {profiles?.isSeller && ( <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createTemplateHandler}>\r\n                        <FaPlus/> Create Template\r\n                    </Button>\r\n                </Col>)}\r\n              \r\n            </Row>\r\n            {loadingMytemplate && (<Loader/>)}\r\n            {profiles?.isSeller && (  <div>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                       \r\n                                        <th>TITLE</th>\r\n                                        <th>IMAGE</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>IS_PAID</th>\r\n                                        <th>PURCHASED</th>\r\n                                        <th>EDIT/DELETE</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {templates?.map(template =>(\r\n                                         <tr key={template._id}>\r\n                                         <td>{template._id}</td>\r\n                                         \r\n                                         <td>{template.title}</td>\r\n                                         <td><Image src={template.thumbnail} style={{\r\n                                             width: '50px',\r\n                                             height: '50px'\r\n                                         }} /></td>\r\n                                         <td>{template.is_paid? template.price: <p>free</p>}</td>\r\n                                         <td>{template.category}</td>\r\n                                         <td>{template.is_paid ? <p>Yes</p>: (\r\n                                               <p>NO</p>\r\n                                            )}</td>\r\n                                            <td>{template.paidAt ? <FaCheck style={{ color : 'green'}}/> : (\r\n                                               <FaCheck style={{ color : 'red'}}/>\r\n                                            )}</td>\r\n\r\n                                         <td>\r\n                                             <LinkContainer to={`/admin/template/${template._id}/edit`}>\r\n                                                 <Button variant='light' className='btn-sm'>\r\n                                                    <FaEdit/>\r\n                                                 </Button>\r\n                                             </LinkContainer>\r\n\r\n                                             <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(template._id)}>\r\n                                                 <FaTrash/>\r\n                                             </Button>\r\n                                                            {/*<Modal\r\n                            show={show}\r\n                            onHide={handleClose}\r\n                            backdrop='static'\r\n                            keyboard={false}\r\n\r\n                            \r\n                        >\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Confirm Delete</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>Are You Sure ,You want to Delete this Project</Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                                    <Button variant='danger' className='btn-sm'onClick={()=> deleteHandler(template._id)} >Delete</Button>\r\n                                </Modal.Footer>\r\n                            </Modal>*/}\r\n           \r\n                                           \r\n                                         </td>\r\n                                     </tr>\r\n                                 \r\n                                    ))}\r\n                                       \r\n                                </tbody>\r\n                            </Table>\r\n                </div> )}\r\n              \r\n            \r\n             \r\n             </Col>\r\n                \r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profilescreen;","// @flow strict\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport {  FaStar, FaStarHalfAlt} from 'react-icons/fa'\r\n\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? (<FaStar/>)\r\n                        : value >= 0.5\r\n                            ? ( <FaStarHalfAlt/>)\r\n                            : <FaStar/>\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? <FaStar/>\r\n                        : value >= 1.5\r\n                            ? <FaStarHalfAlt/>\r\n                            : <FaStar/>\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? <FaStar/>\r\n                        : value >= 2.5\r\n                            ? <FaStarHalfAlt/>\r\n                            : <FaStar/>\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? <FaStar/>\r\n                        : value >= 3.5\r\n                            ? <FaStarHalfAlt/>\r\n                            : <FaStar/>\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? <FaStar/>\r\n                        : value >= 4.5\r\n                            ? <FaStarHalfAlt/>\r\n                            : <FaStar/>\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n\r\n\r\n","// @flow strict\r\n\r\nimport  React,{useState,useEffect} from 'react';\r\nimport {Link,} from 'react-router-dom'\r\nimport {Row,Col,Image,ListGroup,Button,Card,Form,Carousel} from 'react-bootstrap'\r\nimport Rating from '../Components/Rating';\r\n//import products from '../products';\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\n\r\nimport { listTemplateDestails } from '../Actions/templateAction';\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { createTemplateReview } from '../Actions/templateAction';\r\nimport { REVIEW_TEMPLATE_RESET } from '../Constants/templateConstant';\r\nimport axios from 'axios'\r\nimport Helmet from 'react-helmet';\r\n\r\n//import { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\nvar filedownload = require('js-file-download')\r\nfunction TemplateScreen({match,history}) {\r\n    //const product = products.find((p)=> p._id === match.params.id)\r\n\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const  templateDetails = useSelector(state=> state.templateDetails)\r\n    const {error,loading,template} =  templateDetails\r\n\r\n    const templateReview = useSelector(state=> state.templateReview)\r\n    const {error:errorReview,loading:loadingReview,success:successReview} = templateReview\r\n\r\n    \r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n   \r\n\r\n   useEffect(()=>{\r\n    if(successReview){\r\n        setRating(0)\r\n        setComment(\"\")\r\n        dispatch({type:REVIEW_TEMPLATE_RESET })\r\n    }\r\n       dispatch(listTemplateDestails(match.params.id))\r\n      \r\n   },[dispatch,match,successReview])\r\n\r\n \r\n\r\n\r\n\r\n   \r\n  const addTemplateForP = ()=>{\r\n      history.push(`/payment/${match.params.id}`)\r\n  }\r\n\r\n  const submitHandler=(e)=>{\r\n    e.preventDefault()\r\n    dispatch(createTemplateReview(\r\n        match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n    ))\r\n\r\n}\r\n\r\nconst handledownload = (id)=>{\r\n    //dispatch(downloadTemplate(match.params.id))\r\n    axios.get(`${template.templatefile}`,{\r\n        responseType:  'blob',\r\n\r\n    }).then(res => {filedownload(res.data, `${template.templatefile}`);\r\nconsole.log(res);}).catch(err=>{\r\n    console.log(err);\r\n})\r\n}\r\n\r\n\r\n   \r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <div>\r\n                <Helmet>\r\n                    \r\n                <title>{template.title}</title>\r\n                <meta name='description' content={template.description} />\r\n                <meta  property=\"og:title\" content={template.title} data-rh=\"true\"/>\r\n                <meta  property=\"og:description\" content={template.description} data-rh=\"true\"/>\r\n                <meta  property=\"og:image\" content={template.thumbnail} data-rh=\"true\"/>\r\n            </Helmet>\r\n\r\n            <Link to='/' className=\"btn btn-light my-3\">Go Back</Link>\r\n            {loading ? <Loader/> \r\n                : error ? <Message variant=\"danger\">{error}</Message> : (\r\n                    <div>\r\n                    <Row>\r\n                <Col md={6}>\r\n                 <Image src={template.thumbnail} alt={template.title} fluid/>\r\n                 <br/>\r\n                </Col>\r\n             \r\n              <br/>\r\n           \r\n\r\n                <Col md={3}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h3>{template.title}</h3>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Rating value={template.rating} text={`${template.numReviews} reviews`} color={'#f8e825'}/>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Category: {template.category}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Creator: {template.creator}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Price: ${template.price}\r\n                        </ListGroup.Item>\r\n\r\n                    \r\n\r\n                        <ListGroup.Item>\r\n                            description: {template.description}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                \r\n            \r\n                \r\n\r\n                <Col md={3}>\r\n                    <Card>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                    {template.is_paid && <Row>\r\n                            <Col> Price:</Col>\r\n                            <Col>${template.price}</Col>\r\n                        </Row>}\r\n                        {!template.is_paid &&  <Row>\r\n                            <Col> Price:</Col>\r\n                            <Col>Free</Col>\r\n                        </Row>}\r\n                        \r\n\r\n                    </ListGroup.Item>\r\n                    \r\n                    {template.is_paid? (<ListGroup.Item>\r\n                        \r\n                        <h3>Template file</h3>\r\n                        <Button onClick={addTemplateForP}>Pay</Button>\r\n                      \r\n                         \r\n                    </ListGroup.Item>\r\n               ): <ListGroup.Item>\r\n                        \r\n               <h3>File/code</h3>\r\n               <Button onClick={handledownload}>Download</Button>\r\n              \r\n               \r\n                \r\n           </ListGroup.Item>\r\n      }\r\n                    \r\n\r\n              \r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col md={6}>\r\n                <h4>Reviews</h4>\r\n                {template.reviews.length === 0 && <Message variant=\"info\">No Reviews</Message>}\r\n                <ListGroup variant=\"flush\">\r\n                    {template.reviews.map((review)=>(\r\n                        <ListGroup.Item key={review._id}>\r\n                            <strong>{review.name}</strong>\r\n                            <Rating value={review.rating} color=\"#f8e825\"/>\r\n                            <p>{review.createdAt.substring(0,10)}</p>\r\n                            <p>{review.comment}</p>\r\n\r\n                        </ListGroup.Item>\r\n                    ))}\r\n\r\n                    <ListGroup.Item>\r\n                        <h4>Write a reviews</h4>\r\n\r\n                        {loadingReview && <Loader/>}\r\n                        {successReview && <Message variant=\"success\" >Review created</Message>}\r\n                        {errorReview && <Message variant=\"danger\" >{errorReview}</Message>}\r\n                        {userInfo ? (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId=\"rating\">\r\n                                <Form.Label>Rating</Form.Label>\r\n                                <Form.Control\r\n                                as=\"select\"\r\n                                value={rating}\r\n                                onChange={(e)=>setRating(e.target.value)}\r\n                                >\r\n                                    <option value=\"\" >Select...</option>\r\n                                    <option value=\"1\" >1 - Poor</option>\r\n                                    <option value=\"2\" >2 - Fair</option>\r\n                                    <option value=\"3\" >3 - Good</option>\r\n                                    <option value=\"4\" >4 - Very Good</option>\r\n                                    <option value=\"5\" >5 - Excellent</option>\r\n                                </Form.Control>\r\n                                </Form.Group>\r\n                                \r\n                                <Form.Group controlId=\"comment\">\r\n                                    <Form.Label>Reviews</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        row=\"5\"\r\n                                        value={comment}\r\n                                        onChange={(e)=>setComment(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                    <Button\r\n                                    disabled={loadingReview}\r\n                                    type=\"submit\"\r\n                                    variant=\"primary\">\r\n                                    \r\n                                    submit\r\n                                </Button>\r\n                            </Form>\r\n                        ):(\r\n                            <Message variant=\"info\">Please <Link to=\"/login\">Login</Link> to write  reviews</Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            \r\n            </Col>\r\n        </Row>\r\n        </div>\r\n                )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TemplateScreen\r\n;","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport {Card} from 'react-bootstrap'\r\nimport Rating from './Rating';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Templates({template}) {\r\n    \r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n        <Link to={`/template/${template._id}`}>\r\n            <Card.Img src={template.thumbnail}/>\r\n        </Link>\r\n        <Card.Body>\r\n        <Link to={`/template/${template._id}`}>\r\n            <Card.Title as='div'>\r\n                <strong>{template.title}</strong>\r\n            </Card.Title>\r\n\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                    \r\n                    <Rating value={template.rating} text={`${template.numReviews} reviews`} color={'#f8e825'}/>\r\n                    <p><strong>Category: </strong>{template.category}</p>\r\n                   \r\n                </div>\r\n\r\n            </Card.Text>\r\n\r\n            {template.is_paid ? ( <Card.Text as='h3'>\r\n                ${template.price}\r\n            </Card.Text>\r\n): <Card.Text as='h3'>\r\nFree\r\n</Card.Text> }\r\n           \r\n        </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Templates;","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport {Pagination, } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Parginate({pages,page, keyword=\" \", isAdmin=false}) {\r\n\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    console.log('keyword:', keyword )\r\n    return (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x)=>(\r\n                <LinkContainer\r\n                    key={x+1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x+1}`:\r\n                        `/admin/templatelist/?keyword=${keyword}&page=${x+1}`}>\r\n                        <Pagination.Item \r\n                            active={x+1 === page}>\r\n                                { x+ 1}\r\n\r\n                        </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n            \r\n        </Pagination>\r\n    );\r\n};\r\n\r\nexport default Parginate;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\n\r\nimport { listTopTemplate } from '../Actions/templateAction'\r\n\r\nfunction TemplateCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.templateTopRated)\r\n    const { error, loading, templates } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopTemplate())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {templates .map(template => (\r\n                        <Carousel.Item key={template._id}>\r\n                            <Link to={`/template/${template._id}`}>\r\n                                <Image src={template.thumbnail} alt={template.title} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{template.title} (${template.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default TemplateCarousel\r\n\r\n// @flow strict\r\n\r\n","// @flow strict\r\n\r\nimport  React,{useEffect} from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\nimport {Row,Col,Pagination} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\n//import { Link } from \"react-router-dom\";\r\nimport { listTemplates } from '../Actions/templateAction';\r\nimport Template from '../Components/Template';\r\nimport Loader from '../Components/Loader';\r\nimport Message  from '../Components/Message';\r\nimport Parginate from '../Components/Parginate';\r\nimport TemplateCarousel from '../Components/TemplateCarosel';\r\nimport { registerTwoDetails } from '../Actions/userAction';\r\nimport SearchBox from '../Components/searchBox';\r\n\r\n\r\n\r\n\r\n\r\nfunction HomeScreen({history}) {\r\n\r\n    const  dispatch = useDispatch()\r\n\r\n    const templateList = useSelector(state => state.templateList)\r\n    const {error,loading,page,pages,templates} = templateList\r\n\r\n\r\n    let keyword = history.location.search\r\n    \r\n    useEffect(()=>{\r\n        dispatch(listTemplates(keyword))\r\n        \r\n        \r\n       \r\n \r\n\r\n    },[dispatch,keyword])\r\n  \r\n    \r\n    return (\r\n    \r\n        \r\n       \r\n            \r\n        <div>\r\n            <SearchBox/>\r\n             {!keyword && <TemplateCarousel/>}\r\n             \r\n        \r\n        \r\n        <h1>Latest Templates</h1>\r\n        {loading ? <Loader/> :\r\n        error ? <Message variant='danger'>{error}</Message>:\r\n    <div>\r\n        <Row>\r\n            {templates.map(template => (\r\n            <Col key={template._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Template template={template}/>\r\n            </Col>\r\n            ))}\r\n    \r\n        </Row>\r\n        <Parginate page={page} pages={pages} keyword={keyword}/>\r\n       \r\n    </div>\r\n         }\r\n        \r\n    </div>\r\n        \r\n            \r\n     \r\n          \r\n\r\n\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default HomeScreen;","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row,Col,Form,Button } from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport { registerTwo,userLogin } from '../Actions/userAction';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport axios from 'axios'\r\n\r\nfunction StepTwoRegisterScreen({location,history}) {\r\n    const [image, setImage] = React.useState('')\r\n    const [occupation, setOccupation] = React.useState('')\r\n    const [nickname, setNickname] = React.useState('')\r\n    const [country, setCountry] = React.useState('')\r\n    const [uploading, setUploading] = React.useState(false )\r\n\r\n    const redirect = location.search ? location.search.split('m')[1] : '/'\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const userRegisterTwo = useSelector(state => state.userRegisterTwo)\r\n    const {loading,error,userInfoTwo} = userRegisterTwo\r\n\r\n    \r\n    React.useEffect(()=>{\r\n        if (!userInfo){\r\n            history.push('/')\r\n        }\r\n        if(userInfoTwo ){\r\n            //history.push(redirect)\r\n            history.push('/profile')\r\n        }\r\n      \r\n        \r\n    },[userInfo,userInfoTwo,history])\r\n\r\n    const uploadFileHandler = async  (e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n  \r\n        console.log(\"file is uploading\")\r\n        setUploading(true)   \r\n\r\n        try {\r\n            const config = {\r\n                \"content-type\" : \"multipart/form/data\"\r\n            }\r\n            const {data} =await axios.post(\"http://127.0.0.1:8000/api/user/profilephoto/\", formData,config)\r\n            setUploading(false)\r\n            setImage(data)\r\n        } catch (error) {\r\n            setUploading(false)\r\n            \r\n        }\r\n\r\n    }\r\n    const dispatch = useDispatch()\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(registerTwo(image,occupation,country,nickname))\r\n        \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Complete Your Profile</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='image'>\r\n\r\n            <Form.Label>Image</Form.Label>\r\n            <Form.Control\r\n\r\n                type='text'\r\n                placeholder='Enter image'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n            >   \r\n            </Form.Control>\r\n            <Form.File\r\n                id=\"image-file\"\r\n                label=\"choose file\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n                ></Form.File>\r\n                {uploading && <Loader/> }\r\n        </Form.Group>\r\n\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Occupation</Form.Label>\r\n                <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter your username here\"\r\n                value={occupation} \r\n                onChange={(e)=>setOccupation(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n                <Form.Label>Nickname</Form.Label>\r\n                <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter your nickname here\"\r\n                value={nickname} \r\n                onChange={(e)=>setNickname(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"country\">\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter your country here\"\r\n                value={country} \r\n                onChange={(e)=>setCountry(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\">Sign In</Button>\r\n          </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default StepTwoRegisterScreen;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { templateUpdate,listTemplateDestails} from '../Actions/templateAction'\r\nimport { UPDATE_TEMPLATE_RESET, TEMPLATE_DETAILS_RESET } from '../Constants/templateConstant'\r\n\r\n\r\nfunction TemplateEditScreen({match, history}) {\r\n    const templateId = match.params.id\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [thumbnail, setThumbnail] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [image1, setImage1] = useState('')\r\n    const [image2, setImage2] = useState('')\r\n    const [image3, setImage3] = useState('')\r\n    const [file, setFile] = useState(\"\")\r\n    const [description, setDescription] = useState('')\r\n    const [is_paid, setIs_paid] = useState(false)\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    const templateDetails = useSelector(state => state.templateDetails)\r\n    const {loading,error,template} = templateDetails\r\n\r\n    const updateTemplate = useSelector(state => state.updateTemplate)\r\n    const {loading:loadingUpdate, error:errorUpdate, success:successUpdate, } = updateTemplate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type:UPDATE_TEMPLATE_RESET})\r\n            history.push('/profile')\r\n            \r\n        }else{\r\n            if(!template.title || template._id !== Number(templateId)){\r\n                dispatch(listTemplateDestails(templateId))\r\n            } else {\r\n                setTitle(template.title)\r\n                setThumbnail(template.thumbnail)\r\n                setCategory(template.category)\r\n                setPrice(template.price)\r\n                setImage1(template.image1)\r\n                setImage2(template.image2)\r\n                setImage3(template.image3)\r\n                setFile(template.templatefile)\r\n                setIs_paid(template.is_paid)\r\n                setDescription(template.description)\r\n        }\r\n\r\n        }\r\n        \r\n   \r\n           \r\n    }, [dispatch,history,template,templateId, successUpdate])\r\n\r\n\r\n\r\n\r\n   // useEffect(()=>{\r\n       // if(successUpdate){\r\n     ///       dispatch({type:PROJECTS_UPDATE_RESET})\r\n       //     history.push('/profile')\r\n        //}else{\r\n        //    if(!project.title || project._id !== projecttId){\r\n        //        dispatch(listProjectDestails(productId))\r\n         //   }else\r\n           // {\r\n            //    setTitle(project.title)\r\n            //    setDemolink(project.demolink)\r\n            //    setGithub(project.github)\r\n            //    setImage(project.image)\r\n            //    setFile(project.projectfile)\r\n            //    setDescription(project.description)\r\n            //}\r\n        //}\r\n\r\n   // },[dispatch,history,project,projecttId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(templateUpdate(\r\n            {\r\n                _id:  template._id,\r\n                title,\r\n                thumbnail,\r\n                category,\r\n                price,\r\n                image1,\r\n                image2,\r\n                image3,\r\n                file,\r\n                is_paid,\r\n                description\r\n            }\r\n        ))\r\n        console.log(\"updated\")\r\n       // history.push('/profile')\r\n       //dispatch(updateUsers ({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    const uploadThumbnailHandler = async  (e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n        formData.append('template_id', templateId)\r\n        console.log(\"file is uploading\")\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                \"content-type\" : \"multipart/form/data\"\r\n            }\r\n            const {data} =await axios.post(\"/api/template/thumbnail/\", formData,config)\r\n            setUploading(false)\r\n            setThumbnail(data)\r\n        } catch (error) {\r\n            setUploading(false)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const uploadImage1Handler = async  (e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n        formData.append('template_id', templateId)\r\n        console.log(\"file is uploading\")\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                \"content-type\" : \"multipart/form/data\"\r\n            }\r\n            const {data} =await axios.post(\"/api/template/screenshot1/\", formData,config)\r\n            setUploading(false)\r\n            setImage1(data)\r\n        } catch (error) {\r\n            setUploading(false)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const uploadImage2Handler = async  (e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n        formData.append('template_id', templateId)\r\n        console.log(\"file is uploading\")\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                \"content-type\" : \"multipart/form/data\"\r\n            }\r\n            const {data} =await axios.post(\"/api/template/screenshot2/\", formData,config)\r\n            setUploading(false)\r\n            setImage2(data)\r\n        } catch (error) {\r\n            setUploading(false)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const uploadImage3Handler = async  (e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n        formData.append('template_id', templateId)\r\n        console.log(\"file is uploading\")\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                \"content-type\" : \"multipart/form/data\"\r\n            }\r\n            const {data} =await axios.post(\"/api/template/screenshot3/\", formData,config)\r\n            setUploading(false)\r\n            setImage3(data)\r\n        } catch (error) {\r\n            setUploading(false)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const uploadZipFileHandler = async  (e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('file',file)\r\n        formData.append('template_id', templateId)\r\n        console.log(\"file is uploading\")\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                \"content-type\" : \"multipart/form/data\"\r\n            }\r\n            const {data} =await axios.put(\"http://127.0.0.1:8000/api/template/templatefile/\", formData,config)\r\n            setUploading(false)\r\n            setFile(data)\r\n        } catch (error) {\r\n            setUploading(false)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return loading ? (<Loader/>) :\r\n     error? (<Message variant=\"danger\">{error}</Message>):\r\n      (\r\n        <div>\r\n            <Link to='/profile'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Template</h1>\r\n                        {loadingUpdate && <Loader/>}\r\n                        {errorUpdate && <Message variant=\"danger\">{error}</Message>}\r\n\r\n                        {loading? (<Loader/>): error? (<Message variant=\"danger\">{error}</Message>)\r\n                            :\r\n                            (\r\n                                <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='title'>\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter title'\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='choose image'\r\n                                    value={thumbnail}\r\n                                    onChange={(e) => setThumbnail(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                                <Form.File\r\n                                 id=\"thumbnail-file\"\r\n                                 label=\"choose thumbnail\"\r\n                                 custom\r\n                                 onChange={uploadThumbnailHandler}\r\n                                 ></Form.File>\r\n                                 {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"category\">\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                as=\"select\"\r\n                                value={category}\r\n                                onChange={(e)=>setCategory(e.target.value)}\r\n                                >\r\n                                    <option value=\"\" >Select  Category</option>\r\n                                    <option value=\"Banner\" >Banner</option>\r\n                                    <option value=\"Fliers\" >Fliers</option>\r\n                                    <option value=\"Cards\" >Cards</option>\r\n                                    <option value=\"Logos\" >Logos</option>\r\n                                    <option value=\"Social media design \" >Social Media Design</option>\r\n                                    <option value=\"Birthday \" >Birthday Design</option>\r\n                                    <option value=\"wedding \" >Wedding Design</option>\r\n                               \r\n                                </Form.Control>\r\n                                </Form.Group>\r\n\r\n                           \r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image1'>\r\n                                <Form.Label>screenshot1</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='choose screenshot1'\r\n                                    value={image1}\r\n                                    onChange={(e) => setImage1(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                                <Form.File\r\n                                 id=\"image1\"\r\n                                 label=\"select photo\"\r\n                                 custom\r\n                                 onChange={uploadImage1Handler}\r\n                                 ></Form.File>\r\n                                 {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image2'>\r\n                                <Form.Label>Screenshot2</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='choose image'\r\n                                    value={image2}\r\n                                    onChange={(e) => setImage2(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                                <Form.File\r\n                                 id=\"thumbnail-file\"\r\n                                 label=\"choose thumbnail\"\r\n                                 custom\r\n                                 onChange={uploadImage2Handler}\r\n                                 ></Form.File>\r\n                                 {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image3'>\r\n                                <Form.Label>screenshot3</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='choose image'\r\n                                    value={image3}\r\n                                    onChange={(e) => setImage3(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                                <Form.File\r\n                                 id=\"thumbnail-file\"\r\n                                 label=\"choose thumbnail\"\r\n                                 custom\r\n                                 onChange={uploadImage3Handler}\r\n                                 ></Form.File>\r\n                                 {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='file'>\r\n                                <Form.Label>File</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='choose file'\r\n                                    value={file}\r\n                                    onChange={(e) => setFile(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                                <Form.File\r\n                                 id=\"zip-file\"\r\n                                 label=\"choose Template-file\"\r\n                                 custom\r\n                                 onChange={uploadZipFileHandler }\r\n                                 ></Form.File>\r\n                                 {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isPaid'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is_paid'\r\n                                    checked={is_paid}\r\n                                    onChange={(e) => setIs_paid(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                           \r\n\r\n                           \r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    \r\n                            )}        \r\n                    \r\n                        \r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TemplateEditScreen;","// @flow strict\r\nimport React, { useState, useEffect } from 'react'\r\nimport { saveAs } from 'file-saver'\r\nimport { Form, Button, Row, Col, Table, Card, Container, ListGroup, Image } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//import  {useFlutterwave, FlutterWaveButton, closePaymentModal } from 'flutterwave-react-v3';\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { PaystackButton } from 'react-paystack';\r\nimport { purchaseTemplate, payTemplate, templateUpdate } from '../Actions/templateAction'\r\n//import Pay from '../Components/paystackButton'\r\nimport { PAY_TEMPLATE_RESET } from '../Constants/templateConstant'\r\nimport { updateWallets, } from \"../Actions/userAction\"\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport axios from 'axios'\r\nimport Helmet from 'react-helmet'\r\n\r\n\r\nvar filedownload = require('js-file-download')\r\nfunction PaymentsScreen({ match, history }) {\r\n    const templateId = match.params.id\r\n    const walletId = match.params.id\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    //console.log(walletId )\r\n   \r\n\r\n    //const profile = localStorage.getItem(\"profiles\")\r\n    // console.log(profile?.wallet)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n     \r\n\r\n    const templatePay = useSelector(state => state.templatePay)\r\n    const { loading: payLoading, error: payError, success: successPay } = templatePay\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const depositWallet = useSelector(state => state.depositWallet)\r\n    const { loading: loadingWallet, error: erroWallet, success: successDepositWallet,  } = depositWallet\r\n\r\n    \r\n\r\n    const TemplatePurchase = useSelector((state) => state.templatePurchase)\r\n    const { templatePurchase } = TemplatePurchase\r\n\r\n\r\n  \r\n    \r\n \r\n \r\n\r\n \r\n    useEffect(()=>{\r\n        if(templatePurchase.price){\r\n            setWallet(templatePurchase.price)\r\n        }\r\n    },[templatePurchase.price])\r\n   \r\n    const [wallet, setWallet] = useState(templatePurchase.price?(templatePurchase.price): {})\r\n    \r\n  \r\n\r\n\r\n   \r\n    \r\n    useEffect(() => {\r\n        //(registerTwoDetails ())\r\n       \r\n        \r\n\r\n        //dispatch({ type: PAY_TEMPLATE_RESET })\r\n        \r\n\r\n\r\n        if (successPay  ) {\r\n\r\n            dispatch(updateWallets({\r\n                _id: templatePurchase.profile,\r\n                wallet,\r\n            }))\r\n            handledownload()\r\n            alert(\"your payment is successful || Download started \")\r\n            \r\n       \r\n            dispatch({ type: PAY_TEMPLATE_RESET })\r\n        \r\n            \r\n        }\r\n\r\n       \r\n\r\n        if( successDepositWallet){\r\n            setWallet( templatePurchase.price ) \r\n            \r\n\r\n        }    \r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if (templateId) {\r\n            dispatch(purchaseTemplate(templateId))\r\n            //dispatch(getWalletDetails(walletId))\r\n\r\n        }\r\n    \r\n\r\n       \r\n    }, [dispatch, templateId, userInfo, successPay])\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    //payment success handler\r\n    const paymentSuccessHandler = (paymentResult) => {\r\n        \r\n\r\n       \r\n        dispatch(payTemplate(templateId, paymentResult))\r\n       \r\n        \r\n       \r\n    }\r\n    const handledownload = (id) => {\r\n        //dispatch(downloadTemplate(match.params.id))\r\n        axios.get(`${templatePurchase?.templatefile}`, {\r\n            responseType: 'blob',\r\n\r\n        }).then(res => {\r\n            filedownload(res.data, `${templatePurchase?.templatefile}`);\r\n            console.log(res);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Payment and Download</title>\r\n                <meta  name='description' content='payment confirmation and download page'   />\r\n            </Helmet>\r\n\r\n\r\n            <Row>\r\n                <h2>Payment confirmation</h2>\r\n\r\n                <Col md={8}>\r\n                    <ListGroup variant=\r\n                        'flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col   >\r\n                                    <Image src={templatePurchase?.thumbnail} alt={templatePurchase?.tittle} fluid rounded />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Name </Col>\r\n                                <Col>{templatePurchase?.title}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Price</Col>\r\n                                <Col>{templatePurchase?.price}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n\r\n\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        {!templatePurchase.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {payLoading && <Loader />}\r\n\r\n                                           \r\n                                                    <PayPalButton\r\n                                                        amount={templatePurchase?.price}\r\n                                                        onSuccess={paymentSuccessHandler}\r\n                                                        \r\n                                                        \r\n                                                        options={{\r\n                                                            clientId: process.env.REACT_APP_PAYID\r\n                                                        }}\r\n                                                    />\r\n                                             \r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n\r\n                    </ListGroup>\r\n\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaymentsScreen;","// @flow strict\r\n\r\nimport  React,{useEffect, useState} from 'react';\r\nimport { Form, Button, Row, Col, Table,Card,Container, ListGroup ,Image} from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//import  {useFlutterwave, FlutterWaveButton, closePaymentModal } from 'flutterwave-react-v3';\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { PaystackButton } from 'react-paystack';\r\nimport { paidTemplate } from '../Actions/templateAction'\r\nimport { PAY_TEMPLATE_RESET } from '../Constants/templateConstant'\r\n//import Earnings from '../Components/Earnings';\r\n\r\n\r\nfunction PurchasedTemplateScreen({match,history}) {\r\n    const templateId = match.params.id\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const purchasedTemplate = useSelector(state => state.purchasedTemplate)\r\n    const {loading:loadingPuchase, error:errorPurchase, purchaseTemplate} = purchasedTemplate\r\n\r\n    const templatePay = useSelector(state => state.templatePay)\r\n    const {loading:payLoading, error:payError,success:successPay} = templatePay\r\n\r\n\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {loading,error,userInfo} = userLogin\r\n    const [Earnings, setEarnings] = useState(0)\r\n\r\n    //const seconds =  Date.now()\r\n    //console.log(seconds)\r\n\r\n    useEffect(()=>{\r\n     \r\n        if(  !userInfo ){\r\n            \r\n            history.push('/login')\r\n           \r\n        }else{\r\n            \r\n        if(templateId ){\r\n            dispatch(paidTemplate(templateId))\r\n        }}\r\n       \r\n        if(!purchaseTemplate.is_purchased){\r\n           history.push('/')\r\n           console.log(\"not purchase\")\r\n            \r\n        }else{\r\n          //  history.push('/profile')\r\n            dispatch({type: PAY_TEMPLATE_RESET })\r\n            console.log(\"purchase\")\r\n          setEarnings(Earnings + purchaseTemplate.price)\r\n       }\r\n      \r\n        \r\n    \r\n      \r\n      \r\n    },[dispatch,templateId,userInfo,purchaseTemplate.is_purchased])\r\n    console.log(purchaseTemplate.is_purchased)\r\n    console.log(Earnings)\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n        <a href='/' className=\"btn btn-light my-3\">Go Back</a>\r\n        <Row>\r\n            <h2>Ready To Download</h2>\r\n        \r\n            <Col md={8}>\r\n            <ListGroup variant=\r\n            'flush'>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                     \r\n                        <Col   >\r\n                            <Image src={purchaseTemplate.thumbnail} alt={purchaseTemplate.tittle} fluid rounded/>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Name </Col>\r\n                        <Col>{purchaseTemplate.title}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Price</Col>\r\n                        <Col>{purchaseTemplate.price}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    \r\n              \r\n                    <Row>\r\n                        \r\n                 \r\n                        <Button href={purchaseTemplate.templatefile} download>Download</Button>\r\n                  \r\n                        \r\n                    </Row>\r\n                   \r\n                </ListGroup.Item>\r\n\r\n\r\n            </ListGroup>\r\n\r\n            \r\n            \r\n            </Col>\r\n        </Row>\r\n        \r\n    </div>\r\n    );\r\n};\r\n\r\nexport default PurchasedTemplateScreen;","import React, { useEffect,useState } from 'react';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table,Button,Modal } from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {listUsers,deleteUsers} from '../Actions/userAction'\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport {  FaCheck, FaEdit,  FaTrash} from 'react-icons/fa'\r\n\r\nfunction UserListScreen({history}) {\r\n    const dispatch= useDispatch()\r\n    const userList = useSelector(state=> state.usersList)\r\n    const {loading,error,users} = userList\r\n\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state=> state.userDelete)\r\n    const {success:successDelete} = userDelete\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    },[dispatch,history,successDelete])\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose= ()=>{\r\n        setShow(false)\r\n    }\r\n   \r\n    const handleShow= ()=>{\r\n       setShow(true)\r\n   }\r\n   \r\n\r\n    const deleteHandler= (id)=>{\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUsers(id))\r\n        }\r\n            \r\n      \r\n        \r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading ? (<Loader/>) :\r\n            error ? (<Message variant=\"danger\">{error}</Message>):\r\n            (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>EMAIL</th>\r\n                        <th>ADMIN</th>\r\n\r\n                        </tr>\r\n                     \r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user=>(\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isAdmin ? (\r\n                                    <FaCheck style={{color: \"green\"}}/>\r\n                                  \r\n                                ):\r\n                                (<FaCheck style={{color: \"red\"}}/>)}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant=\"light\">\r\n                                            <FaEdit/>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" onClick={()=> deleteHandler(user._id)} >\r\n                                            <FaTrash/>\r\n                                        </Button>\r\n                                       { /*<Modal\r\n                                                show={show}\r\n                                                onHide={handleClose}\r\n                                                backdrop='static'\r\n                                                keyboard={false}\r\n\r\n                                                \r\n                                                >\r\n                                                    <Modal.Header closeButton>\r\n                                                        <Modal.Title>Confirm Delete</Modal.Title>\r\n                                                    </Modal.Header>\r\n                                                    <Modal.Body>Are You Sure ,You want to Delete this Project</Modal.Body>\r\n                                                    <Modal.Footer>\r\n                                                        <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                                                        <Button variant='danger' className='btn-sm'onClick={()=> deleteHandler(user._id)} >Delete</Button>\r\n                                                    </Modal.Footer>\r\n                                       </Modal>*/}\r\n                                </td>\r\n                                \r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { getUserDetails, updateUsers   } from '../Actions/userAction'\r\n//import { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../Constants/userConstants'\r\n\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n  \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n      \r\n        \r\n        }\r\n        }\r\n            \r\n        \r\n\r\n           \r\n\r\n    }, [user, userId,successUpdate,errorUpdate,history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       dispatch(updateUsers ({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                \r\n                        {loadingUpdate && <Loader/>}\r\n                        {errorUpdate && <Message variant=\"danger\">{error}</Message>}\r\n\r\n                        {loading? (<Loader/>): error? (<Message variant=\"danger\">{error}</Message>)\r\n                            :\r\n                            (\r\n                                <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                           \r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    \r\n                            )}        \r\n                    \r\n                        \r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col,Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport {  FaCheck, FaEdit,  FaTrash} from 'react-icons/fa'\r\n//import Paginate from '../components/Paginate'\r\nimport { listTemplates, templateDelete, } from '../Actions/templateAction'\r\nimport Helmet from 'react-helmet'\r\n\r\n//import Parginate from '../components/Parginate'\r\n\r\nfunction TemplateListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const templateList = useSelector(state => state.templateList)\r\n    const {error,loading,templates,} = templateList\r\n\r\n\r\n    const deleteTemplate = useSelector(state => state.deleteTemplate)\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete,} = deleteTemplate\r\n\r\n    \r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        //dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }else{\r\n            dispatch(listTemplates(keyword))\r\n        }                   \r\n\r\n      \r\n            \r\n        \r\n\r\n    }, [dispatch, history, userInfo, successDelete,  keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this template?')) {\r\n            dispatch(templateDelete(id))\r\n        }\r\n      \r\n       \r\n    }\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose= ()=>{\r\n        setShow(false)\r\n    }\r\n   \r\n    const handleShow= ()=>{\r\n       setShow(true)\r\n   }\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Template List</title>\r\n            </Helmet>\r\n\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>All Templates</h1>\r\n                </Col>\r\n\r\n             \r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n           \r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>USER</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        \r\n                                        <th>edit /delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {templates.map(template => (\r\n                                        <tr key={template._id}>\r\n                                            <td>{template._id}</td>\r\n                                            <td>{template.title}</td>\r\n                                            <td>{template.creator}</td>\r\n                                            <td>${template.price}</td>\r\n                                            <td>{template.category}</td>\r\n                                          \r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/template/${template._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <FaEdit/>\r\n                                                        \r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(template._id)}>\r\n                                                    <FaTrash/>\r\n                                                </Button>\r\n                                               { /*<Modal\r\n                                                show={show}\r\n                                                onHide={handleClose}\r\n                                                backdrop='static'\r\n                                                keyboard={false}\r\n\r\n                                                \r\n                                                >\r\n                                                    <Modal.Header closeButton>\r\n                                                        <Modal.Title>Confirm Delete</Modal.Title>\r\n                                                    </Modal.Header>\r\n                                                    <Modal.Body>Are You Sure ,You want to Delete this Project</Modal.Body>\r\n                                                    <Modal.Footer>\r\n                                                        <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                                                        <Button variant='danger' className='btn-sm'onClick={()=> deleteHandler(template._id)} >Delete</Button>\r\n                                                    </Modal.Footer>\r\n                                               </Modal>*/}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            \r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemplateListScreen\r\n\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table,Button,Modal ,Image} from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {listUsers,deleteUsers, listProfiles, deleteProfiles} from '../Actions/userAction'\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport {  FaCheck, FaEdit,  FaTrash} from 'react-icons/fa'\r\nimport Helmet from 'react-helmet';\r\n\r\nfunction ProfileListScreen({history}) {\r\n    const dispatch= useDispatch()\r\n\r\n    const profileList = useSelector(state=> state.profilesList)\r\n    const {loading,error,profiles} = profileList\r\n\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const profileDelete = useSelector(state=> state.profileDelete)\r\n    const {success:successDelete} = profileDelete\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listProfiles())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    },[dispatch,history,successDelete])\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose= ()=>{\r\n        setShow(false)\r\n    }\r\n   \r\n    const handleShow= ()=>{\r\n       setShow(true)\r\n   }\r\n   \r\n\r\n    const deleteHandler= (id)=>{\r\n\r\n        if (window.confirm('Are you sure you want to delete this profile?')) {\r\n            dispatch(deleteProfiles(id))\r\n        }\r\n          \r\n            \r\n        \r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <tile>User and Wallets details</tile>\r\n            </Helmet>\r\n\r\n            <h1>Users Profiles and Wallets Details </h1>\r\n            {loading ? (<Loader/>) :\r\n            error ? (<Message variant=\"danger\">{error}</Message>):\r\n            (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>NAME</th>\r\n                        <th>NICKNAME</th>\r\n                        <th>IMAGE</th>\r\n                        <th>OCCUPATION</th>\r\n                        <th>COUNTRY</th>\r\n                        <th>WALLET</th>\r\n                        <th>SELLER</th>\r\n                        <th>STAFF</th>\r\n                        <th>EDIT/DELET</th>\r\n\r\n                        </tr>\r\n                     \r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {profiles.map(profile=>(\r\n                            <tr key={profile._id}>\r\n                                <td>{profile.name}</td>\r\n                                <td>{profile.nickname}</td>\r\n                                <td><Image src={profile.photo} style={{\r\n                                             width: '50px',\r\n                                             height: '50px'\r\n                                         }} /></td>\r\n                                <td>{profile.occupation}</td>\r\n                                <td>{profile.country}</td>\r\n                                <td>{profile.wallet}</td>\r\n                                <td>{profile.isSeller ? (\r\n                                    <FaCheck style={{color: \"green\"}}/>\r\n                                  \r\n                                ):\r\n                                (<FaCheck style={{color: \"red\"}}/>)}</td>\r\n\r\n                                <td>{profile.isStaff ? (\r\n                                    <FaCheck style={{color: \"green\"}}/>\r\n                                  \r\n                                ):\r\n                                (<FaCheck style={{color: \"red\"}}/>)}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/profile/${profile._id}/edit`}>\r\n                                        <Button variant=\"light\">\r\n                                            <FaEdit/>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" onClick={()=> deleteHandler(profile._id)}>\r\n                                            <FaTrash/>\r\n                                        </Button>\r\n                                        {/*<Modal\r\n                                                show={show}\r\n                                                onHide={handleClose}\r\n                                                backdrop='static'\r\n                                                keyboard={false}\r\n\r\n                                                \r\n                                                >\r\n                                                    <Modal.Header closeButton>\r\n                                                        <Modal.Title>Confirm Delete</Modal.Title>\r\n                                                    </Modal.Header>\r\n                                                    <Modal.Body>Are You Sure ,You want to Delete this profile </Modal.Body>\r\n                                                    <Modal.Footer>\r\n                                                        <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                                                        <Button variant='danger' className='btn-sm'onClick={()=> deleteHandler(profile._id)} >Delete</Button>\r\n                                                    </Modal.Footer>\r\n                                                </Modal>*/}\r\n                                </td>\r\n                                \r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileListScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { getProfileDetails, updateProfiles,   } from '../Actions/userAction'\r\n//import { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { PROFILE_UPDATE_RESET } from '../Constants/userConstants'\r\n\r\n\r\nfunction ProfilesEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [occupation, setOccupation] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [wallet, setWallet] = useState('')\r\n    const [isSeller, setIsSeller] = useState(false)\r\n    const [isStaff, setIsStaff] = useState(false)\r\n  \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.profileDetails)\r\n    const { error, loading, profile } = userDetails\r\n\r\n    const profileUpdate = useSelector(state => state.profileUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = profileUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: PROFILE_UPDATE_RESET})\r\n            history.push('/admin/profilelist')\r\n        }else{\r\n            if (!profile.nickname || profile._id !== Number(userId)) {\r\n                dispatch(getProfileDetails(userId))\r\n            } else {\r\n                setName(profile.name)\r\n                setNickname(profile.nickname)\r\n                setOccupation(profile.occupation)\r\n                setCountry(profile.country)\r\n                setWallet(profile.wallet)\r\n                setIsSeller(profile.isSeller)\r\n                setIsStaff(profile.isStaff)\r\n      \r\n        \r\n        }\r\n        }\r\n            \r\n        \r\n\r\n           \r\n\r\n    }, [profile, userId,successUpdate,errorUpdate,history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       dispatch(updateProfiles ({ _id: profile._id,name, occupation,country,nickname,wallet,isSeller,isStaff\r\n  \r\n  }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/profilelist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                \r\n                        {loadingUpdate && <Loader/>}\r\n                        {errorUpdate && <Message variant=\"danger\">{error}</Message>}\r\n\r\n                        {loading? (<Loader/>): error? (<Message variant=\"danger\">{error}</Message>)\r\n                            :\r\n                            (\r\n                                <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='nickname'>\r\n                                <Form.Label>Nickname</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter nickname'\r\n                                    value={nickname}\r\n                                    onChange={(e) => setNickname(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='occupation'>\r\n                                <Form.Label>OCCUPATION</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter your occupation'\r\n                                    value={occupation}\r\n                                    onChange={(e) => setOccupation(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='country'>\r\n                                <Form.Label>Country</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter your country'\r\n                                    value={country}\r\n                                    onChange={(e) => setCountry(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='wallet'>\r\n                                <Form.Label>Wallet</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='w'\r\n                                    value={wallet}\r\n                                    onChange={(e) => setWallet(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isSeller'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Seller'\r\n                                    checked={isSeller}\r\n                                    onChange={(e) => setIsSeller(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isStaff'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Staff'\r\n                                    checked={isStaff}\r\n                                    onChange={(e) => setIsStaff(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                           \r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    \r\n                            )}        \r\n                    \r\n                        \r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfilesEditScreen\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { getProfileDetails, updateProfiles, updateProfilesUser,   } from '../Actions/userAction'\r\n//import { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { PROFILE_UPDATE_RESET, PROFILE_USER_UPDATE_RESET } from '../Constants/userConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction UserProfileSettings({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [occupation, setOccupation] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n   \r\n  \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.profileDetails)\r\n    const { error, loading, profile } = userDetails\r\n\r\n    const profileUpdate = useSelector(state => state.profileUserUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = profileUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: PROFILE_USER_UPDATE_RESET})\r\n            history.push('/profile')\r\n        }else{\r\n            if (!profile.nickname || profile._id !== Number(userId)) {\r\n                dispatch(getProfileDetails(userId))\r\n            } else {\r\n                setName(profile.name)\r\n                setNickname(profile.nickname)\r\n                setOccupation(profile.occupation)\r\n                setCountry(profile.country)\r\n               \r\n      \r\n        \r\n        }\r\n        }\r\n            \r\n\r\n           \r\n\r\n    }, [profile, userId,successUpdate,errorUpdate,history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       dispatch(updateProfilesUser ({ _id: profile._id,name, occupation,country,nickname,image\r\n  \r\n  }))\r\n    }\r\n\r\n    const uploadThumbnailHandler = async  (e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n        formData.append('user_id', userId)\r\n        console.log(\"file is uploading\")\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                \"content-type\" : \"multipart/form/data\"\r\n            }\r\n            const {data} =await axios.post(\"/api/user/profilephoto/\", formData,config)\r\n            setUploading(false)\r\n            setImage(data)\r\n        } catch (error) {\r\n            setUploading(false)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/profilelist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>  <Image  style={{\r\n                    heigth: \"50px\",\r\n                    width : \"50px\"\r\n                }} src={profile?.photo}/>\r\n                \r\n                        {loadingUpdate && <Loader/>}\r\n                        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n                        {loading? (<Loader/>): error? (<Message variant=\"danger\">{error}</Message>)\r\n                            :\r\n                            (\r\n                                <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Profile Photo</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='choose image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                                <Form.File\r\n                                 id=\"thumbnail-file\"\r\n                                 label=\"profile Photo\"\r\n                                 custom\r\n                                 onChange={uploadThumbnailHandler}\r\n                                 ></Form.File>\r\n                                 {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='nickname'>\r\n                                <Form.Label>Nickname</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter nickname'\r\n                                    value={nickname}\r\n                                    onChange={(e) => setNickname(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='occupation'>\r\n                                <Form.Label>OCCUPATION</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter your occupation'\r\n                                    value={occupation}\r\n                                    onChange={(e) => setOccupation(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='country'>\r\n                                <Form.Label>Country</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter your country'\r\n                                    value={country}\r\n                                    onChange={(e) => setCountry(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                           \r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    \r\n                            )}        \r\n                    \r\n                        \r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserProfileSettings\r\n\r\n\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table,Button,Modal ,Image} from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { getWithdrawalsList, deleteWithdrawal} from '../Actions/userAction'\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport {  FaCheck, FaEdit,  FaTrash} from 'react-icons/fa'\r\n\r\nfunction WithdarawalListScreen({history}) {\r\n    const dispatch= useDispatch()\r\n\r\n    const withdarawlList = useSelector(state=> state.withdrawalList)\r\n    const {loading,error,withdrawals} = withdarawlList\r\n\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const withdrawalDelete = useSelector(state=> state.withdrawalDelete)\r\n    const {success:successDelete} = withdrawalDelete\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(getWithdrawalsList())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    },[dispatch,history,successDelete])\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose= ()=>{\r\n        setShow(false)\r\n    }\r\n   \r\n    const handleShow= ()=>{\r\n       setShow(true)\r\n   }\r\n   \r\n\r\n    const deleteHandler= (id)=>{\r\n        \r\n        if (window.confirm('Are you sure you want to delete this withdrawal?')) {\r\n            dispatch(deleteWithdrawal(id))\r\n        }\r\n            \r\n          //  setShow(false)\r\n        \r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <h1>Withdrawal History </h1>\r\n            {loading ? (<Loader/>) :\r\n            error ? (<Message variant=\"danger\">{error}</Message>):\r\n            (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>DATE CREATED</th>\r\n                        <th>TIME CREATED</th>\r\n                        <th>NAME</th>\r\n                        <th>AMOUNT</th>\r\n                        <th>ACCOUNT NAME</th>\r\n                        <th>BANK NAME</th>\r\n                        <th>ACCOUNT NUMBER</th>\r\n                        <th>PAYPAL ID</th>\r\n                        <th>IS_SUCCESS</th>\r\n                        <th>EDIT/DELET</th>\r\n\r\n                        </tr>\r\n                     \r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                        {withdrawals.map(withdraw=>(\r\n                            <tr key={withdraw._id}>\r\n                                <td>{withdraw.createdAt.slice(0,10)}</td>\r\n                                <td>{withdraw.createdAt.slice(11,20)}</td>\r\n                                <td>{withdraw.name}</td>\r\n                                <td>{withdraw.amount}</td>\r\n                                <td>{withdraw.accountName}</td>\r\n                                <td>{withdraw.accountBank_Name }</td>\r\n                                <td>{withdraw.accountBank_Number}</td>\r\n                                <td>{withdraw.payPalId}</td>\r\n                                <td>{withdraw.is_success ? (\r\n                                    <FaCheck style={{color: \"green\"}}/> \r\n                                  \r\n                                ):\r\n                                (<FaCheck style={{color: \"red\"}}/>)} </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/withdraw/${withdraw._id}/edit`}>\r\n                                        <Button variant=\"light\">\r\n                                            <FaEdit/>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"danger\" onClick={()=> deleteHandler(withdraw._id)}>\r\n                                            <FaTrash/>\r\n                                        </Button>\r\n                                        {/*<Modal\r\n                                                show={show}\r\n                                                onHide={handleClose}\r\n                                                backdrop='static'\r\n                                                keyboard={false}\r\n\r\n                                                \r\n                                                >\r\n                                                    <Modal.Header closeButton>\r\n                                                        <Modal.Title>Confirm Delete</Modal.Title>\r\n                                                    </Modal.Header>\r\n                                                    <Modal.Body>Are You Sure ,You want to Delete this profile </Modal.Body>\r\n                                                    <Modal.Footer>\r\n                                                        <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                                                        <Button variant='danger' className='btn-sm'onClick={()=> deleteHandler(withdraw._id)} >Delete</Button>\r\n                                                    </Modal.Footer>\r\n                                        </Modal>*/}\r\n                                </td>\r\n\r\n                                \r\n                               \r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WithdarawalListScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { getProfileDetails, getWithdrawalDetails, updateProfiles, updateWithdrawal,   } from '../Actions/userAction'\r\n//import { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { WITHDRAWAL_UPDATE_RESET } from '../Constants/userConstants'\r\n\r\n\r\nfunction WithdrawalEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [amount, setAmount] = useState('')\r\n    const [accountName, setAccountName] = useState('')\r\n    const [accountBank_Name, setAccountBank_Name] = useState('')\r\n    const [accountBank_Number, setAccountBank_Number] = useState('')\r\n    const [payPalId, setPaypalId] = useState('')\r\n    const [is_success, setIs_success] = useState(false)\r\n  \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const withdrawalDetails = useSelector(state => state.withdrawalDetails)\r\n    const { error, loading, withdrawal } = withdrawalDetails\r\n\r\n    const withdrawalUpdate = useSelector(state => state.withdrawalUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } =  withdrawalUpdate \r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: WITHDRAWAL_UPDATE_RESET})\r\n            history.push('/admin/withdrawallist')\r\n        }else{\r\n            if (!withdrawal.name || withdrawal._id !== Number(userId)) {\r\n                dispatch(getWithdrawalDetails(userId))\r\n            } else {\r\n                setName(withdrawal.name)\r\n                setAmount(withdrawal.amount)\r\n                setAccountName(withdrawal.accountName)\r\n                setAccountBank_Name(withdrawal.accountBank_Name)\r\n                setAccountBank_Number(withdrawal.accountBank_Number)\r\n                setPaypalId(withdrawal.payPalId)\r\n                setIs_success(withdrawal.is_success)\r\n      \r\n        \r\n        }\r\n        }\r\n            \r\n        \r\n\r\n           \r\n\r\n    }, [withdrawal, userId,successUpdate,errorUpdate,history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       dispatch(updateWithdrawal ({ _id: withdrawal._id,name, amount,accountName,accountBank_Name,accountBank_Number,payPalId,is_success\r\n  \r\n  }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/withdrawallist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Mark withdrawal as paid</h1>\r\n                \r\n                        {loadingUpdate && <Loader/>}\r\n                        {errorUpdate && <Message variant=\"danger\">{error}</Message>}\r\n\r\n                        {loading? (<Loader/>): error? (<Message variant=\"danger\">{error}</Message>)\r\n                            :\r\n                            (\r\n                                <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='amount'>\r\n                                <Form.Label>amount</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='amount'\r\n                                    value={amount}\r\n                                    onChange={(e) => setAmount(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='occupation'>\r\n                                <Form.Label>ACCOUNT Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter your account name '\r\n                                    value={accountName}\r\n                                    onChange={(e) => setAccountName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='country'>\r\n                                <Form.Label>Bank Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='bank name'\r\n                                    value={accountBank_Name}\r\n                                    onChange={(e) => setAccountBank_Name(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='account number'>\r\n                                <Form.Label>ACCOUNT NUMBER</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='account number'\r\n                                    value={accountBank_Number}\r\n                                    onChange={(e) => setAccountBank_Number(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n                            <Form.Group controlId='account number'>\r\n                                <Form.Label>PayPalId</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='paypal email'\r\n                                    value={payPalId}\r\n                                    onChange={(e) => setPaypalId(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='is_success'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is success'\r\n                                    checked={is_success}\r\n                                    onChange={(e) => setIs_success(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                           \r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    \r\n                            )}        \r\n                    \r\n                        \r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default WithdrawalEditScreen\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { createWithdrawals, decreaseWallets, getWithdrawalDetails  } from '../Actions/userAction'\r\n//import { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { CREATE_WITHDRAWAL_RESET } from '../Constants/userConstants'\r\nimport { profileListReducer } from '../Reducers/userReducer'\r\nimport Helmet from 'react-helmet'\r\n\r\n\r\nfunction CreateWithdrawalScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    \r\n\r\n    \r\n    const [amount, setAmount] = useState(0)\r\n    const [accountName, setAccountName] = useState('')\r\n    const [accountBank_Name, setAccountBank_Name] = useState('')\r\n    const [accountBank_Number, setAccountBank_Number] = useState(0)\r\n    const [payPalId, setPaypalId] = useState('')\r\n    \r\n  \r\n\r\n    const dispatch = useDispatch()\r\n\r\n   \r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const createWithdrawal = useSelector(state => state.createWithdrawal)\r\n    const {loading:loadingcreate, error: errorcreate,\r\n        success:successCreate} = createWithdrawal\r\n\r\n    const depositWallet = useSelector(state => state.depositWallet)\r\n    const { loading: loadingWallet, error: erroWallet, success: successDepositWallet,  } = depositWallet\r\n\r\n\r\n    const withdrawalDetails = useSelector(state => state.withdrawalDetails)\r\n    const { error, loading, withdrawal } = withdrawalDetails\r\n\r\n    const userProfile = useSelector(state => state.userProfileMore)\r\n    const {profiles,} = userProfile\r\n\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        if (!userInfo){\r\n            history.push('/')\r\n        }\r\n        if(successCreate){\r\n            dispatch({type: CREATE_WITHDRAWAL_RESET})\r\n            dispatch(decreaseWallets({_id: profiles?._id , amount}))\r\n            history.push('/mywithdrawal')\r\n        }\r\n    }, [dispatch,successCreate,errorcreate,history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       dispatch(createWithdrawals (  amount,accountName,accountBank_Name,accountBank_Number,payPalId))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Apply for withdrawal</title>\r\n            </Helmet>\r\n\r\n            <Link to='/mywithdrawal/'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Apply for Withdrawal</h1>\r\n\r\n                <Message variant=\"info\">20% will be deducted from your withdrawal amount while you will be paid 80%</Message>\r\n                \r\n                        \r\n                        {errorcreate && <Message variant=\"danger\">{errorcreate}</Message>}\r\n\r\n                                <Form onSubmit={submitHandler}>\r\n\r\n                            \r\n\r\n                            <Form.Group controlId='amount'>\r\n                                <Form.Label>amount</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='amount'\r\n                                    value={amount}\r\n                                    onChange={(e) => setAmount(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='account name'>\r\n                                <Form.Label>ACCOUNT Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter your account name '\r\n                                    value={accountName}\r\n                                    onChange={(e) => setAccountName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='bank name'>\r\n                                <Form.Label>Bank Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='bank name'\r\n                                    value={accountBank_Name}\r\n                                    onChange={(e) => setAccountBank_Name(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='account number'>\r\n                                <Form.Label>ACCOUNT NUMBER</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='account number'\r\n                                    value={accountBank_Number}\r\n                                    onChange={(e) => setAccountBank_Number(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n                            <Form.Group controlId='paypal'>\r\n                                <Form.Label>PayPalId</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='paypal email'\r\n                                    value={payPalId}\r\n                                    onChange={(e) => setPaypalId(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                           \r\n                        {profiles?.wallet <= 9.99 ? (<Message variant=\"danger\">Unfortunately You are not eligle to withdraw</Message>): \r\n                        ( <Button type='submit' variant='primary'>\r\n                        Submit\r\n                </Button>\r\n                        )\r\n                        }\r\n                           \r\n                        </Form>\r\n                    \r\n                                \r\n                    \r\n                        \r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CreateWithdrawalScreen\r\n\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table,Button,Modal ,Image, Row, Col} from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {listMyWithdrawals} from '../Actions/userAction'\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport {  FaCheck, FaEdit,  FaTrash} from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\n\r\nfunction MyWithdarawalListScreen({history}) {\r\n    const dispatch= useDispatch()\r\n\r\n    const withdarawlList = useSelector(state=> state.myWithdrawal)\r\n    const {loading,error,withdrawals} = withdarawlList\r\n\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userProfile = useSelector(state => state.userProfileMore)\r\n    const {profiles} = userProfile\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(userInfo || profiles?.isSeller){\r\n            dispatch(listMyWithdrawals())\r\n        }else{\r\n            history.push('/')\r\n        }\r\n        \r\n    },[dispatch,history])\r\n\r\n  \r\n\r\n    \r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Withdrawal history</title>\r\n            </Helmet>\r\n\r\n            <h1>Withdrawal History </h1>\r\n\r\n            {loading ? (<Loader/>) :\r\n            error ? (<Message variant=\"danger\">{error}</Message>):\r\n            (\r\n\r\n                \r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>DATE CREATED</th>\r\n                        <th>TIME CREATED</th>\r\n                        <th>NAME</th>\r\n                        <th>AMOUNT</th>\r\n                        <th>ACCOUNT NAME</th>\r\n                        <th>BANK NAME</th>\r\n                        <th>ACCOUNT NUMBER</th>\r\n                        <th>PAYPAL ID</th>\r\n                        <th>STATUS</th>\r\n                        </tr>\r\n                     \r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                        {withdrawals.map(withdraw=>(\r\n                            <tr key={withdraw._id}>\r\n                                <td>{withdraw.createdAt.slice(0,10)}</td>\r\n                                <td>{withdraw.createdAt.slice(11,20)}</td>\r\n                                <td>{withdraw.name}</td>\r\n                                <td>{withdraw.amount}</td>\r\n                                <td>{withdraw.accountName}</td>\r\n                                <td>{withdraw.accountBank_Name }</td>\r\n                                <td>{withdraw.accountBank_Number}</td>\r\n                                <td>{withdraw.payPalId}</td>\r\n                                <td>{withdraw.is_success ? (\r\n                                   \" Paid\" \r\n                                  \r\n                                ):\r\n                               ( \"Pending\")} </td>\r\n                             \r\n\r\n                                \r\n                               \r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyWithdarawalListScreen;","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport {Card} from 'react-bootstrap'\r\nimport Rating from './Rating';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Blogs({blog}) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n        <Link to={`/blog/${blog._id}`}>\r\n            <Card.Img src={blog.thumbnail}/>\r\n        </Link>\r\n        <Card.Body>\r\n        <Link to={`/blog/${blog._id}`}>\r\n            <Card.Title as='div'>\r\n                <strong>{blog.title}</strong>\r\n            </Card.Title>\r\n\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                    \r\n                    <Rating value={blog.rating} text={`${blog.numReviews} reviews`} color={'#f8e825'}/>\r\n                </div>\r\n\r\n            </Card.Text>\r\n\r\n\r\n        </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Blogs;","import {\r\n    BLOG_LIST_REQUEST,\r\n    BLOG_LIST_SUCCESS,\r\n    BLOG_LIST_FAIL,\r\n    \r\n    BLOG_DETAILS_REQUEST,\r\n    BLOG_DETAILS_SUCCESS,\r\n    BLOG_DETAILS_FAIL,\r\n\r\n    \r\n    CREATE_BLOG_REQUEST,\r\n    CREATE_BLOG_SUCCESS,\r\n    CREATE_BLOG_FAIL,\r\n    CREATE_BLOG_RESET,\r\n\r\n    UPDATE_BLOG_REQUEST,\r\n    UPDATE_BLOG_SUCCESS,\r\n    UPDATE_BLOG_FAIL,\r\n    UPDATE_BLOG_RESET,\r\n\r\n    DELETE_BLOG_REQUEST,\r\n    DELETE_BLOG_SUCCESS,\r\n    DELETE_BLOG_FAIL,\r\n    DELETE_BLOG_RESET,\r\n\r\n    \r\n    BLOG_CREATE_REVIEW_REQUEST,\r\n    BLOG_CREATE_REVIEW_SUCCESS,\r\n    BLOG_CREATE_REVIEW_FAIL,\r\n    BLOG_CREATE_REVIEW_RESET,\r\n\r\n    \r\n    } from  '../Constants/blogConstants'\r\n    \r\n\r\nimport axios from \"axios\"\r\n\r\n\r\nexport const listBlogs = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: BLOG_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/blog/getallblogs/`)\r\n\r\n        dispatch({\r\n            type: BLOG_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BLOG_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listBlogsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: BLOG_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/blog/${id}/blogdetails/`)\r\n\r\n        dispatch({\r\n            type: BLOG_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BLOG_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createBlogs = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CREATE_BLOG_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/blog/createblog/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: CREATE_BLOG_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_BLOG_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const blogUpdate = (blog)=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type: UPDATE_BLOG_REQUEST, })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/blog/${blog._id}/updateBlog/`,\r\n        blog,\r\n        config)\r\n\r\n        dispatch({\r\n           type: UPDATE_BLOG_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: BLOG_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_BLOG_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const blogDelete = (id)=> async (dispatch,getState)=>{\r\n    try {\r\n        dispatch({ type: DELETE_BLOG_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`/api/blog/${id}/deleteblog/`,\r\n        config)\r\n\r\n        dispatch({\r\n            type: DELETE_BLOG_SUCCESS,\r\n        \r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_BLOG_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createBlogReview = (blogId,review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: BLOG_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/blog/${blogId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: BLOG_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BLOG_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const BLOG_LIST_REQUEST = \"BLOG_LIST_REQUEST\"\r\nexport const BLOG_LIST_SUCCESS = \"BLOG_LIST_SUCCESS\"\r\nexport const BLOG_LIST_FAIL = \"BLOG_LIST_FAIL\"\r\n\r\n\r\n\r\nexport const BLOG_DETAILS_REQUEST = \"BLOG_DETAILS_REQUEST\"\r\nexport const BLOG_DETAILS_SUCCESS = \"BLOG_DETAILS_SUCCESS\"\r\nexport const BLOG_DETAILS_FAIL = \"BLOG_DETAILS_FAIL\"\r\n\r\n\r\nexport const CREATE_BLOG_REQUEST = \"CREATE_BLOG_REQUEST\"\r\nexport const CREATE_BLOG_SUCCESS = \"CREATE_BLOG_SUCCESS\"\r\nexport const CREATE_BLOG_FAIL = \"CREATE_BLOG_FAIL\"\r\nexport const CREATE_BLOG_RESET = \"CREATE_BLOG_RESET\"\r\n\r\n\r\nexport const UPDATE_BLOG_REQUEST = \"UPDATE_BLOG_REQUEST\"\r\nexport const UPDATE_BLOG_SUCCESS = \"UPDATE_BLOG_SUCCESS\"\r\nexport const UPDATE_BLOG_FAIL = \"UPDATE_BLOG_FAIL\"\r\nexport const UPDATE_BLOG_RESET = \"UPDATE_BLOG_RESET\"\r\n\r\n\r\nexport const DELETE_BLOG_REQUEST = \"DELETE_BLOG_REQUEST\"\r\nexport const DELETE_BLOG_SUCCESS = \"DELETE_BLOG_SUCCESS\"\r\nexport const DELETE_BLOG_FAIL = \" DELETE_BLOG_FAIL\"\r\n\r\n\r\nexport const BLOG_CREATE_REVIEW_REQUEST = 'BLOG_CREATE_REVIEW_REQUEST'\r\nexport const BLOG_CREATE_REVIEW_SUCCESS = 'BLOG_CREATE_REVIEW_SUCCESS'\r\nexport const BLOG_CREATE_REVIEW_FAIL = 'BLOG_CREATE_REVIEW_FAIL'\r\nexport const BLOG_CREATE_REVIEW_RESET = 'BLOG_CREATE_REVIEW_RESET'\r\n\r\n\r\n\r\n","// @flow strict\r\n\r\nimport React,{useEffect} from 'react';\r\nimport {Col,Pagination,Row,} from 'react-bootstrap'\r\n\r\nimport Blog from '../Components/blogs'\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\n\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\n//import Parginate from '../components/Parginate';\r\n//import ProductCarosel from '../components/ProductCarosel';\r\nimport { listBlogs, blogUpdate,blogDelete } from '../Actions/blogActions';\r\n\r\nimport Helmet from 'react-helmet';\r\n//import Helmet from 'react-helmet';\r\n\r\n\r\nfunction BlogListScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const blogLists = useSelector(state => state.bloglist)\r\n    const {error,loading,blogs} = blogLists\r\n    \r\n    let keyword = history.location.search\r\n    useEffect(()=>{\r\n        dispatch(listBlogs())\r\n        \r\n       \r\n \r\n\r\n    },[dispatch])\r\n  \r\n\r\n\r\n    return (\r\n        <div>\r\n         <Helmet>\r\n                <title>Blogs</title>\r\n                <meta property='og:description' content='all latest blog post ' /> \r\n            </Helmet>\r\n           \r\n            \r\n            <h1>latest Blogs</h1>\r\n            {loading ? <Loader/> :\r\n            error ? <Message variant='danger'>{error}</Message>:\r\n        <div>\r\n            <Row>\r\n                {blogs?.map(blog => (\r\n                <Col key={blog._id} sm={12} md={6} lg={4} xl={3}>\r\n                    <Blog blog={blog}/>\r\n                </Col>\r\n                ))}\r\n        \r\n            </Row>\r\n           \r\n            \r\n        </div>\r\n             }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogListScreen;","// @flow strict\r\n\r\nimport  React,{useState,useEffect} from 'react';\r\nimport {Link,} from 'react-router-dom'\r\nimport {Row,Col,Image,ListGroup,Button,Card,Form,Carousel} from 'react-bootstrap'\r\nimport Rating from '../Components/Rating';\r\n//import products from '../products';\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\n\r\nimport { listBlogsDetails} from '../Actions/blogActions';\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { createBlogReview } from '../Actions/blogActions';\r\nimport { BLOG_CREATE_REVIEW_RESET } from '../Constants/blogConstants';\r\n import Helmet from 'react-helmet';\r\n \r\n\r\n\r\n\r\n\r\nfunction BlogDetailsScreen({match,history}) {\r\n\r\n\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const  blogDetail = useSelector(state=> state.blogDetails)\r\n    const {error,loading,blog} =  blogDetail\r\n\r\n    const createReview = useSelector(state=> state.blogCreateReview)\r\n    const {error:errorReview,loading:loadingReview,success:successReview} = createReview\r\n\r\n    \r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n   \r\n\r\n   useEffect(()=>{\r\n\r\n    if(successReview){\r\n        setRating(0)\r\n        setComment(\"\")\r\n        dispatch({type:BLOG_CREATE_REVIEW_RESET})\r\n    }\r\n   \r\n   \r\n    dispatch(listBlogsDetails(match.params.id))\r\n      \r\n   },[dispatch,match, successReview])\r\n\r\n\r\n\r\n  const submitHandler=(e)=>{\r\n    e.preventDefault()\r\n    dispatch(createBlogReview(\r\n        match.params.id, {\r\n        \r\n            rating,\r\n            comment\r\n        }\r\n    ))\r\n\r\n}\r\n\r\n   \r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>{blog.title}</title>\r\n                <meta name='description' content={blog.description}/>\r\n                \r\n                <meta property='og:title' content={blog.title} data-rh='true'/>\r\n                <meta property=\"og:description\" content= {blog.description} data-rh=\"true\" />\r\n                <meata property=\"og:image\" content= {blog.thumbnail} data-rh=\"true\" />\r\n                \r\n\r\n           \r\n            </Helmet>\r\n\r\n            <Link to='/' className=\"btn btn-light my-3\">Go Back</Link>\r\n            {loading ? <Loader/> \r\n                : error ? <h3 style={{\r\n                    color : \"red\"\r\n                }} variant=\"danger\">{error}</h3> : (\r\n                    <div>\r\n                    <Row>\r\n                <Col md={6}>\r\n                 <Image src={blog.thumbnail} alt={blog.title} style={{width: \"80%\"}} fluid/>\r\n                 <br/>\r\n                </Col>\r\n             \r\n              <br/>\r\n           \r\n\r\n        \r\n            \r\n                \r\n\r\n                <Col md={6}>\r\n                <h3 style={{marginTop: '20px', fontFamily: 'sans sheriff',fontWeight: 'bold'}}>{blog.title}</h3>\r\n                <p style={{ fonts: 'sans sheriff', fontWeight: '500'}}> {blog.body}</p>\r\n                  \r\n            </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col md={6}>\r\n                <h4 style={{marginTop: \"15px\"}}>Reviews</h4>\r\n                {blog.reviews.length === 0 && <Message variant=\"info\">No Reviews</Message>}\r\n                <ListGroup variant=\"flush\">\r\n                    {blog.reviews.map((review)=>(\r\n                        <ListGroup.Item key={review._id}>\r\n                            <strong>{review.name}</strong>\r\n                            <Rating value={review.rating} color=\"#f8e825\"/>\r\n                            <p>{review.createdAt.substring(0,10)}</p>\r\n                            <p>{review.comment}</p>\r\n\r\n                        </ListGroup.Item>\r\n                    ))}\r\n\r\n                    <ListGroup.Item>\r\n\r\n                        <h4 >Write a reviews</h4>\r\n                        \r\n                        {loadingReview && <Loader/>}\r\n                        {successReview && <Message variant=\"success\" >Review created</Message>}\r\n                        {errorReview && <Message variant=\"danger\" >{errorReview}</Message>}\r\n                        {userInfo ? (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId=\"rating\">\r\n                                <Form.Label>Rating</Form.Label>\r\n                                <Form.Control\r\n                                as=\"select\"\r\n                                value={rating}\r\n                                onChange={(e)=>setRating(e.target.value)}\r\n                                >\r\n                                    <option value=\"\" >Select...</option>\r\n                                    <option value=\"1\" >1 - Poor</option>\r\n                                    <option value=\"2\" >2 - Fair</option>\r\n                                    <option value=\"3\" >3 - Good</option>\r\n                                    <option value=\"4\" >4 - Very Good</option>\r\n                                    <option value=\"5\" >5 - Excellent</option>\r\n                                </Form.Control>\r\n                                </Form.Group>\r\n                                \r\n                                <Form.Group controlId=\"comment\">\r\n                                    <Form.Label>Reviews</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        row=\"5\"\r\n                                        value={comment}\r\n                                        onChange={(e)=>setComment(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                    <Button\r\n                                    disabled={loadingReview}\r\n                                    type=\"submit\"\r\n                                    variant=\"primary\">\r\n                                    \r\n                                    submit\r\n                                </Button>\r\n                            </Form>\r\n                        ):(\r\n                            <Message variant=\"info\">Please <Link to=\"/login\">Login</Link> to write  reviews</Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            \r\n            </Col>\r\n        </Row>\r\n        </div>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogDetailsScreen\r\n\r\n;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col,Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport {  FaCheck, FaEdit,  FaTrash,FaPlus} from 'react-icons/fa'\r\n//import Paginate from '../components/Paginate'\r\nimport { listBlogs, blogDelete,createBlogs } from '../Actions/blogActions'\r\nimport { CREATE_BLOG_RESET } from '../Constants/blogConstants'\r\n//import Helmet from 'react-helmet'\r\n// @flow strict\r\n\r\n\r\nfunction BlogScreeen({match,history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const blogLists = useSelector(state => state.bloglist)\r\n    const {error,loading,blogs} = blogLists\r\n\r\n    const deleteBlog = useSelector(state => state.deleteBlog)\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete,} = deleteBlog\r\n\r\n    \r\n    const createBlogss = useSelector(state => state.createBlog)\r\n    const {loading:loadingcreateBlog, error: errorcreateBlog,\r\n        blogs: createdBlog,\r\n        success:successCreateBlog} = createBlogss\r\n\r\n        const updateBlogs = useSelector(state => state.updateBlog)\r\n        const {loading:loadingUpdate, error:errorUpdate, success:successUpdate, } = updateBlogs\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userProfile = useSelector(state => state.userProfileMore)\r\n    const {profiles} = userProfile\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: CREATE_BLOG_RESET })\r\n\r\n        if (!profiles.isStaff) {\r\n            history.push('/')\r\n        }\r\n        if(successCreateBlog){\r\n            \r\n            history.push(`/admin/blog/${createdBlog._id}/edit/`)\r\n            \r\n            \r\n        }\r\n        else{\r\n            dispatch(listBlogs())\r\n        }                   \r\n\r\n      \r\n            \r\n        \r\n\r\n    }, [dispatch, history, userInfo, successCreateBlog,createdBlog, successDelete, successUpdate])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n      alert(\"are you sure you want to delete  this blog post\")\r\n        dispatch(blogDelete(id))\r\n        setShow(false)\r\n        \r\n    }\r\n\r\n    const createBlogHandler = (e)=>{\r\n        dispatch(createBlogs())\r\n    }\r\n    \r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose= ()=>{\r\n        setShow(false)\r\n    }\r\n   \r\n    const handleShow= ()=>{\r\n       setShow(true)\r\n   }\r\n   \r\n    return (\r\n        <div>\r\n           {/* <Helmet>\r\n                <title>\r\n                    Admin Blog Screen\r\n                </title>\r\n        </Helmet>*/}\r\n              <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>All Blogs</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createBlogHandler}>\r\n                        <FaPlus/> Create Blog\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n           \r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>USER</th>\r\n                                        <th>TITLE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        \r\n                                        <th>edit /delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {blogs.map(blog => (\r\n                                        <tr key={blog._id}>\r\n                                            <td>{blog._id}</td>\r\n                                            <td>{blog.author}</td>\r\n                                            <td>{blog.title}</td>\r\n                                            <td>{blog.category}</td>\r\n                                          \r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/blog/${blog._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <FaEdit/>\r\n                                                        \r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(blog._id)}>\r\n                                                    <FaTrash/>\r\n                                                </Button>\r\n                                               \r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            \r\n                        </div>\r\n                    )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogScreeen;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport { blogUpdate,listBlogsDetails} from '../Actions/blogActions'\r\nimport { UPDATE_BLOG_RESET} from '../Constants/blogConstants'\r\nimport Helmet from 'react-helmet'\r\n\r\n\r\n\r\nfunction BlogEditScreen({match, history}) {\r\n    const blogId = match.params.id\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [thumbnail, setThumbnail] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [description, setDescription] = useState('')\r\n   \r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    const blogDetail = useSelector(state => state.blogDetails)\r\n    const {loading,error,blog} = blogDetail\r\n\r\n    const updateBlogs = useSelector(state => state.updateBlog)\r\n    const {loading:loadingUpdate, error:errorUpdate, success:successUpdate, } = updateBlogs\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type:UPDATE_BLOG_RESET})\r\n            history.push('/admin/blogs')\r\n            \r\n        }else{\r\n            if(!blog.title || blog._id !== Number(blogId)){\r\n                dispatch(listBlogsDetails(blogId))\r\n            } else {\r\n                setTitle(blog.title)\r\n                setThumbnail(blog.thumbnail)\r\n                setCategory(blog.category)\r\n                setDescription(blog.body)\r\n        }\r\n\r\n        }\r\n        \r\n   \r\n           \r\n    }, [dispatch,history,blog,blogId, successUpdate])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(blogUpdate(\r\n            {\r\n                _id:  blog._id,\r\n                title,\r\n                thumbnail,\r\n                category,\r\n                description\r\n            }\r\n        ))\r\n        console.log(\"updated\")\r\n    \r\n    }\r\n\r\n    const uploadThumbnailHandler = async  (e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n        formData.append('blog_id', blogId)\r\n        console.log(\"file is uploading\")\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                \"content-type\" : \"multipart/form/data\"\r\n            }\r\n            const {data} =await axios.post(\"https://teamattechglobal.herokuapp.com/api/blog/uploadthumbnail/\", formData,config)\r\n            setUploading(false)\r\n            setThumbnail(data)\r\n        } catch (error) {\r\n            setUploading(false)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n    return loading ? (<Loader/>) :\r\n     error? (<Message variant=\"danger\">{error}</Message>):\r\n      (\r\n        <div>\r\n            <Helmet>\r\n                <title>Edit blog</title>\r\n            </Helmet>\r\n         \r\n            <Link to='/admin/blogs/'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Blog</h1>\r\n                        {loadingUpdate && <Loader/>}\r\n                        {errorUpdate && <Message variant=\"danger\">{error}</Message>}\r\n\r\n                        {loading? (<Loader/>): error? (<Message variant=\"danger\">{error}</Message>)\r\n                            :\r\n                            (\r\n                                <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='title'>\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter title'\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='choose image'\r\n                                    value={thumbnail}\r\n                                    onChange={(e) => setThumbnail(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                                <Form.File\r\n                                 id=\"thumbnail-file\"\r\n                                 label=\"choose thumbnail\"\r\n                                 custom\r\n                                 onChange={uploadThumbnailHandler}\r\n                                 ></Form.File>\r\n                                 {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                           \r\n\r\n                           \r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                           \r\n\r\n                           \r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    \r\n                            )}        \r\n                    \r\n                        \r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default BlogEditScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, ListGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport FormContainer from '../Components/FormContainer'\r\n\r\n//import { getUserDetails, updateUser } from '../actions/userActions'\r\n\r\nimport { CREATE_SELLER_FORM_RESET, SELLER_PAY_RESET } from '../Constants/sellerFormConstants'\r\nimport { createSellerFormm, getSellerDetails, paySeller } from '../Actions/sellerFormActions'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Helmet from 'react-helmet'\r\n\r\n\r\nfunction ApplyForSellerScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    \r\n\r\n    \r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [amount, setAmount] = useState('')\r\n\r\n    \r\n  \r\n\r\n    const dispatch = useDispatch()\r\n\r\n   \r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    const sellerDetails = useSelector(state => state.sellerDetails)\r\n    const { error, loading, seller } = sellerDetails\r\n\r\n    const userProfile = useSelector(state => state.userProfileMore)\r\n    const {profiles,} = userProfile\r\n\r\n\r\n    const sellerPay = useSelector(state=> state.sellerPay)\r\n    const {loading:payLoading,success:successPay} = sellerPay\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(!seller || successPay | seller._id !== Number(userId)){\r\n            dispatch({type: SELLER_PAY_RESET})\r\n            dispatch(getSellerDetails(userId))\r\n        }\r\n\r\n        if(successPay){\r\n            //dispatch({type:UPDATE_BLOG_RESET})\r\n            history.push('/profile/')\r\n            \r\n        }else {\r\n                setUsername(seller.username)\r\n                setEmail(seller.email)\r\n                setAmount(seller.amount)\r\n             \r\n        \r\n\r\n        }\r\n        \r\n   \r\n           \r\n    }, [dispatch,history,seller,userId, successPay])\r\n\r\n \r\n\r\n    const paymentSuccessHandler=(paymentResult)=>{\r\n        dispatch(paySeller(userId,paymentResult))\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Apply For Seller account</title>\r\n                <meta name='description' content='users that wish to be seller can register here'/>\r\n\r\n            </Helmet>\r\n\r\n            <Link to='/mywithdrawal/'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Apply for Seller Account</h1>\r\n\r\n                <Message variant='info'>Once You make payment of $5 You are good to go</Message>\r\n\r\n               \r\n\r\n\r\n               \r\n                \r\n                        \r\n                      \r\n\r\n                                <Form >\r\n\r\n                            \r\n\r\n                            <Form.Group controlId='username'>\r\n                                <Form.Label>username</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='username'\r\n                                    value={username}\r\n                                    onChange={(e) => setUsername(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='email address '\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n                            <Form.Group controlId='amount'>\r\n                                <Form.Label>Amount</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='amount '\r\n                                    value={amount}\r\n                                   \r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n \r\n                        </Form>\r\n                    \r\n                    \r\n                                \r\n                    \r\n                        \r\n\r\n            </FormContainer >\r\n            <ListGroup variant='flush'>\r\n            {!seller.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {payLoading && <Loader />}\r\n\r\n                                           \r\n                                                    <PayPalButton\r\n                                                        amount={seller?.amount}\r\n                                                        onSuccess={paymentSuccessHandler}\r\n                                                        options={{\r\n                                                            clientId: \"AT1MYvy5YjHd5YA6BlGARQx87hsR4BzI7dSmsjt3slo8Ud_aLO6aYxDDCnSVAHqCgLyUegWD5av0BaU1\"\r\n                                                        }}\r\n                                                    />\r\n                                             \r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n            </ListGroup>\r\n\r\n      \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ApplyForSellerScreen\r\n\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table,Button,Modal ,Image} from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {listUsers,deleteUsers, listProfiles, deleteProfiles} from '../Actions/userAction'\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\nimport {  FaCheck, FaEdit,  FaTrash} from 'react-icons/fa'\r\nimport { listSellers, sellerDelete } from '../Actions/sellerFormActions';\r\n\r\nfunction SellerScreen({history}) {\r\n    const dispatch= useDispatch()\r\n\r\n    const sellerList = useSelector(state=> state.sellerList)\r\n    const {loading,error,sellers} = sellerList\r\n\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const deleteSeller = useSelector(state => state.sellerDelete)\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete,} = deleteSeller\r\n\r\n   \r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listSellers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    },[dispatch,history, successDelete])\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose= ()=>{\r\n        setShow(false)\r\n    }\r\n   \r\n    const handleShow= ()=>{\r\n       setShow(true)\r\n   }\r\n   \r\n\r\n    const deleteHandler= (id)=>{\r\n\r\n        if (window.confirm('Are you sure you want to delete this profile?')) {\r\n            dispatch(sellerDelete(id))\r\n        }\r\n          \r\n            \r\n        \r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <h1>Seller Forms </h1>\r\n            {loading ? (<Loader/>) :\r\n            error ? (<Message variant=\"danger\">{error}</Message>):\r\n            (\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>USERNAME</th>\r\n                        <th>Email</th>\r\n                        <th>Amount</th>\r\n                        <th>IS_PAID</th>\r\n                        <th>PAID_AT</th>\r\n                        <th>TIME</th>\r\n                        <th>DELETE</th>\r\n                   \r\n\r\n                        </tr>\r\n                     \r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {sellers?.map(seller=>(\r\n                            <tr key={seller._id}>\r\n                                <td>{seller.username}</td>\r\n                                <td>{seller.email}</td>\r\n                                <td>{seller.amount}</td>\r\n                               \r\n                               \r\n                                <td>{seller.isPaid ? (\r\n                                    <FaCheck style={{color: \"green\"}}/>\r\n                                  \r\n                                ):\r\n                                (<FaCheck style={{color: \"red\"}}/>)}</td>\r\n\r\n                                <td>{seller.paidAt?.slice(0,10)}</td>\r\n                                <td>{seller.paidAt?.slice(11,16)}</td>\r\n\r\n                                \r\n                                <td>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(seller._id)}>\r\n                                                    <FaTrash/>\r\n                                                </Button>\r\n                                               \r\n                                            </td>\r\n                                \r\n                                \r\n                                \r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SellerScreen;","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nfunction RulesAndRegScreen() {\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Rules Guiding Sellers on PLPFACTORY</title>\r\n                <meta property='description' content='General Rules and Regulations, all sellers must read and follow' />\r\n            </Helmet>\r\n\r\n            <h2><strong>General Rules Guiding Seller on PlpFactory</strong></h2>\r\n            <p>All Sellers must follow the terms and conditions</p>\r\n\r\n            <ul>\r\n                <li>Seller Template Price should not above  <strong>$10</strong> , till further Notice..</li>\r\n                <li> <strong>Seller must use PlpFactory thumbnail Template for their Template cover photo</strong>  </li>\r\n                <li><strong>Seller must provide at least 2-4 free template every month</strong></li>\r\n                <li>There would be discount every weekend. </li>\r\n                <li>Pornography, Sex contents will be removed automatically and the \r\n                 seller that is responsible for it would be ban for a week. </li>\r\n                <li><strong>Note: </strong> Maximum of 5 paid template per month.</li>\r\n          \r\n                <li>Non Performing Template will be removed after a month.</li>\r\n                <li>Best performing Template will be given more promotion and concentation every weeks</li>\r\n                <li>Learn how to use dummy data , to represent your image and text, such as \"lorem ipsum text \" for some text in your designs </li>\r\n            </ul>\r\n\r\n            <h3><strong>Withdrawal Rules</strong></h3>\r\n            <ul>\r\n                <li>You are eligible to withdraw Once you have minimum of <strong>$10.99</strong> in your wallet</li>\r\n                <li>All withdrawal placed within the week will be paid to sellers every sunday</li>\r\n                <li><strong>Note:20% will be deducted from your withdrawal amount while 80% will be paid to sellers on every withdrawal</strong></li>\r\n                <li>Always withdraw with your  valid payPal email</li>\r\n                <li>Sellers from Nigeria can apply for withdrawal with their valid local bank account details</li>\r\n                <li><strong>Note: we have no algorithm to detect valid payPalId or bank details, always make sure  you submit correct/valid withfrawal details</strong></li>\r\n                \r\n            </ul>\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RulesAndRegScreen;","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nfunction TermsAndConditionScreen() {\r\n    return (\r\n        <div>\r\n                <Helmet>\r\n                    <title>Terms And Conditions</title>\r\n                    <meta property='description' content='Terms and conditoins ' />\r\n                </Helmet>\r\n\r\n            <h2><strong>Terms and Conditions</strong></h2>\r\n\r\n            <p><strong>Welcome to PLPFACTORY!</strong></p>\r\n\r\n            <p>These terms and conditions outline the rules and regulations for the use of ShedenBright inc's Website, located at PlpFactory.com.</p>\r\n\r\n            <p>By accessing this website we assume you accept these terms and conditions. Do not continue to use PlpFactory if you do not agree to take all of the terms and conditions stated on this page.</p>\r\n\r\n            <p>The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and all Agreements: \"Client\", \"You\" and \"Your\" refers to you, the person log on this website and compliant to the Company’s terms and conditions. \"The Company\", \"Ourselves\", \"We\", \"Our\" and \"Us\", refers to our Company. \"Party\", \"Parties\", or \"Us\", refers to both the Client and ourselves. All terms refer to the offer, acceptance and consideration of payment necessary to undertake the process of our assistance to the Client in the most appropriate manner for the express purpose of meeting the Client’s needs in respect of provision of the Company’s stated services, in accordance with and subject to, prevailing law of Netherlands. Any use of the above terminology or other words in the singular, plural, capitalization and/or he/she or they, are taken as interchangeable and therefore as referring to same.</p>\r\n\r\n            <h3><strong>Cookies</strong></h3>\r\n\r\n            <p>We employ the use of cookies. By accessing PlpFactory, you agreed to use cookies in agreement with the ShedenBright inc's Privacy Policy. </p>\r\n\r\n            <p>Most interactive websites use cookies to let us retrieve the user’s details for each visit. Cookies are used by our website to enable the functionality of certain areas to make it easier for people visiting our website. Some of our affiliate/advertising partners may also use cookies.</p>\r\n\r\n            <h3><strong>License</strong></h3>\r\n\r\n            <p>Unless otherwise stated, ShedenBright inc and/or its licensors own the intellectual property rights for all material on PlpFactory. All intellectual property rights are reserved. You may access this from PlpFactory for your own personal use subjected to restrictions set in these terms and conditions.</p>\r\n\r\n            <p>You must not:</p>\r\n            <ul>\r\n                <li>Republish material from PlpFactory</li>\r\n                <li>Sell, rent or sub-license material from PlpFactory</li>\r\n                <li>Reproduce, duplicate or copy material from PlpFactory</li>\r\n                <li>Redistribute content from PlpFactory</li>\r\n            </ul>\r\n\r\n            <p>This Agreement shall begin on the date hereof. Our Terms and Conditions were created with the help of the <a href=\"https://www.privacypolicies.com/blog/sample-terms-conditions-template/\">Terms And Conditions Template</a>.</p>\r\n\r\n            <p>Parts of this website offer an opportunity for users to post and exchange opinions and information in certain areas of the website. ShedenBright inc does not filter, edit, publish or review Comments prior to their presence on the website. Comments do not reflect the views and opinions of ShedenBright inc,its agents and/or affiliates. Comments reflect the views and opinions of the person who post their views and opinions. To the extent permitted by applicable laws, ShedenBright inc shall not be liable for the Comments or for any liability, damages or expenses caused and/or suffered as a result of any use of and/or posting of and/or appearance of the Comments on this website.</p>\r\n\r\n            <p>ShedenBright inc reserves the right to monitor all Comments and to remove any Comments which can be considered inappropriate, offensive or causes breach of these Terms and Conditions.</p>\r\n\r\n            <p>You warrant and represent that:</p>\r\n\r\n            <ul>\r\n                <li>You are entitled to post the Comments on our website and have all necessary licenses and consents to do so;</li>\r\n                <li>The Comments do not invade any intellectual property right, including without limitation copyright, patent or trademark of any third party;</li>\r\n                <li>The Comments do not contain any defamatory, libelous, offensive, indecent or otherwise unlawful material which is an invasion of privacy</li>\r\n                <li>The Comments will not be used to solicit or promote business or custom or present commercial activities or unlawful activity.</li>\r\n            </ul>\r\n\r\n            <p>You hereby grant ShedenBright inc a non-exclusive license to use, reproduce, edit and authorize others to use, reproduce and edit any of your Comments in any and all forms, formats or media.</p>\r\n\r\n            <h3><strong>Hyperlinking to our Content</strong></h3>\r\n\r\n            <p>The following organizations may link to our Website without prior written approval:</p>\r\n\r\n            <ul>\r\n                <li>Government agencies;</li>\r\n                <li>Search engines;</li>\r\n                <li>News organizations;</li>\r\n                <li>Online directory distributors may link to our Website in the same manner as they hyperlink to the Websites of other listed businesses; and</li>\r\n                <li>System wide Accredited Businesses except soliciting non-profit organizations, charity shopping malls, and charity fundraising groups which may not hyperlink to our Web site.</li>\r\n            </ul>\r\n\r\n            <p>These organizations may link to our home page, to publications or to other Website information so long as the link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products and/or services; and (c) fits within the context of the linking party’s site.</p>\r\n\r\n            <p>We may consider and approve other link requests from the following types of organizations:</p>\r\n\r\n            <ul>\r\n                <li>commonly-known consumer and/or business information sources;</li>\r\n                <li>dot.com community sites;</li>\r\n                <li>associations or other groups representing charities;</li>\r\n                <li>online directory distributors;</li>\r\n                <li>internet portals;</li>\r\n                <li>accounting, law and consulting firms; and</li>\r\n                <li>educational institutions and trade associations.</li>\r\n            </ul>\r\n\r\n            <p>We will approve link requests from these organizations if we decide that: (a) the link would not make us look unfavorably to ourselves or to our accredited businesses; (b) the organization does not have any negative records with us; (c) the benefit to us from the visibility of the hyperlink compensates the absence of ShedenBright inc; and (d) the link is in the context of general resource information.</p>\r\n\r\n            <p>These organizations may link to our home page so long as the link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products or services; and (c) fits within the context of the linking party’s site.</p>\r\n\r\n            <p>If you are one of the organizations listed in paragraph 2 above and are interested in linking to our website, you must inform us by sending an e-mail to ShedenBright inc. Please include your name, your organization name, contact information as well as the URL of your site, a list of any URLs from which you intend to link to our Website, and a list of the URLs on our site to which you would like to link. Wait 2-3 weeks for a response.</p>\r\n\r\n            <p>Approved organizations may hyperlink to our Website as follows:</p>\r\n\r\n            <ul>\r\n                <li>By use of our corporate name; or</li>\r\n                <li>By use of the uniform resource locator being linked to; or</li>\r\n                <li>By use of any other description of our Website being linked to that makes sense within the context and format of content on the linking party’s site.</li>\r\n            </ul>\r\n\r\n            <p>No use of ShedenBright inc's logo or other artwork will be allowed for linking absent a trademark license agreement.</p>\r\n\r\n            <h3><strong>iFrames</strong></h3>\r\n\r\n            <p>Without prior approval and written permission, you may not create frames around our Webpages that alter in any way the visual presentation or appearance of our Website.</p>\r\n\r\n            <h3><strong>Content Liability</strong></h3>\r\n\r\n            <p>We shall not be hold responsible for any content that appears on your Website. You agree to protect and defend us against all claims that is rising on your Website. No link(s) should appear on any Website that may be interpreted as libelous, obscene or criminal, or which infringes, otherwise violates, or advocates the infringement or other violation of, any third party rights.</p>\r\n\r\n            <h3><strong>Your Privacy</strong></h3>\r\n\r\n            <p>Please read Privacy Policy</p>\r\n\r\n            <h3><strong>Reservation of Rights</strong></h3>\r\n\r\n            <p>We reserve the right to request that you remove all links or any particular link to our Website. You approve to immediately remove all links to our Website upon request. We also reserve the right to amen these terms and conditions and it’s linking policy at any time. By continuously linking to our Website, you agree to be bound to and follow these linking terms and conditions.</p>\r\n\r\n            <h3><strong>Removal of links from our website</strong></h3>\r\n\r\n            <p>If you find any link on our Website that is offensive for any reason, you are free to contact and inform us any moment. We will consider requests to remove links but we are not obligated to or so or to respond to you directly.</p>\r\n\r\n            <p>We do not ensure that the information on this website is correct, we do not warrant its completeness or accuracy; nor do we promise to ensure that the website remains available or that the material on the website is kept up to date.</p>\r\n\r\n            <h3><strong>Disclaimer</strong></h3>\r\n\r\n            <p>To the maximum extent permitted by applicable law, we exclude all representations, warranties and conditions relating to our website and the use of this website. Nothing in this disclaimer will:</p>\r\n\r\n            <ul>\r\n                <li>limit or exclude our or your liability for death or personal injury;</li>\r\n                <li>limit or exclude our or your liability for fraud or fraudulent misrepresentation;</li>\r\n                <li>limit any of our or your liabilities in any way that is not permitted under applicable law; or</li>\r\n                <li>exclude any of our or your liabilities that may not be excluded under applicable law.</li>\r\n            </ul>\r\n\r\n            <p>The limitations and prohibitions of liability set in this Section and elsewhere in this disclaimer: (a) are subject to the preceding paragraph; and (b) govern all liabilities arising under the disclaimer, including liabilities arising in contract, in tort and for breach of statutory duty.</p>\r\n\r\n            <p>As long as the website and the information and services on the website are provided free of charge, we will not be liable for any loss or damage of any nature.</p>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TermsAndConditionScreen;","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Helmet from 'react-helmet'\r\n\r\nfunction FaqScreen() {\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Faqs</title>\r\n                <meta property='description' content='Frequently ask questions || You got questions we get answers' />\r\n            </Helmet>\r\n            \r\n            <h2><strong>FREQUENTLY ASK QUESTIONS</strong></h2>\r\n            <p><strong>These are frequently ask questions , kindly contacts us for more query</strong></p>\r\n\r\n           \r\n            <div>\r\n            <h4><strong>Q:How can i Register as a Seller on this Platform</strong></h4>\r\n            <p>You can be registerd as a seller once you have agree to pay sum of $5.00 , by simply click on Apply for seller account button at the Header tab,\r\n                Your account will be approved within 24hrs. \r\n            </p>\r\n\r\n            <h4><strong>Q:How can i upload my templates</strong></h4>\r\n            <p>You can upload your Template files by simply click on Create Template button in your <Link to='/profile'>Profile</Link>\r\n            </p>\r\n\r\n\r\n            <h4><strong>Q:Can i delete or Update my Template after being Posted</strong></h4>\r\n            <p>Yeah, you are free to delete and update your Templates after being posted, you are responsible for whatever you uploaded!.\r\n            </p>\r\n\r\n            \r\n            <h4><strong>Q:HOW WILL I BE PAID AFTER USER PURCHASE MY TEMPLATES</strong></h4>\r\n            <p>\r\n                You can withdraw or cashout your Earnings once you have minimum of <strong>$10.99</strong> in your wallet,\r\n                by simply navigate to <Link to='/withdraw'>apply for withdrawal page</Link>  and submit your PayPal_id or yor local bank details\r\n            </p>\r\n\r\n            <h4><strong>Q:WHEN WILL I RECEIVE MY PAYMENT</strong></h4>\r\n            <p>\r\n              All payments will be paid to sellers every sunday.\r\n            </p>\r\n\r\n            <h4><strong>Q:HAVING ISSUES IN CUSTOMIZE/EDIT TEMPLATE FILES, DOWNLOAD HERE</strong></h4>\r\n            <p>\r\n              Once you have successfully download .plp zip file here, kindly move it to Preset folder, inside Pixellab folder on your device,\r\n              then unzip it there, after that open Pixellab app and locate it at the projects tab!.\r\n            </p>\r\n\r\n\r\n            <h4><strong>Q:HOW WILL I PREPARE MY PIXELLAB PROJECTS FOR SELL</strong></h4>\r\n            <p>\r\n              Once you are done with the design , kindly save it as a projects, then , locate the design in your preset folder and covert it to zip file.\r\n            </p>\r\n\r\n\r\n\r\n\r\n             \r\n            <h4><strong>Q:WHAT IS MY BENEFIT FOR SELLEING MY TEMPLATE HERE</strong></h4>\r\n            <p>\r\n               There are thousands of benefit for you while marketing your templates here!!\r\n               <ul>\r\n                   <li>Earning passive income from your designs.</li>\r\n                   <li>Free promotion for your designs.</li>\r\n                   <li>You Earn Daily from your designs.</li>\r\n                   <li>Free graphics resources for your next design.</li>\r\n                   <li>Free tutorials and training for you.</li>\r\n                   <li>You get connected to different clients arround the world.</li>\r\n                   <li>Be your own Boss, etc.</li>\r\n               </ul>\r\n\r\n            </p>\r\n\r\n            <h4><strong>Q:CAN I CHANGE THE PRICE OF MY TEMPLATE AT ANY TIME , I WISH.</strong></h4>\r\n            <p>\r\n            You are free to change the price of your templates at any time you wish,but always follow our rules guiding Templates price, for all seller.\r\n            </p>\r\n\r\n\r\n        \r\n\r\n         \r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FaqScreen;","// @flow strict\r\n\r\nimport * as React from 'react';\r\n\r\nfunction AboutUsScreen() {\r\n    return (\r\n        <div>\r\n            <h1>ABOUT .PLPFACTORY</h1>\r\n\r\n            <p>Plp Factory is a market place for SmartPhone Graphics Designers, to buy and sell ,\r\n                there .plp projects to fellow graphics designers and to end users.\r\n             Our Platform allow them to Earn passive income with their designs without stress, by promoting and marketing their designs for them,\r\n                they get paid once user purchase their design directly without any delay, they are responsible for whatever, they upload here for marketing,\r\n                as our Platform provide easy to use dashboard for managing their contents here.\r\n                The project was initiated by <strong>ShedenBright Media </strong> , an online Company which aim to provide solutions to Digital problem.\r\n            </p>\r\n\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutUsScreen;","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter as Router ,Route,Switch,} from 'react-router-dom'\r\nimport Header from './Components/Header';\r\nimport Footer from './Components/Footer';\r\nimport {Container} from 'react-bootstrap'\r\nimport LoginScreen from './Screens/LoginScreen';\r\nimport RegisterScreen from './Screens/RegisterScreen';\r\nimport Profilescreen from './Screens/ProfileScreen';\r\nimport TemplateScreen from './Screens/TemplateScreen';\r\nimport HomeScreen from './Screens/HomeScreen';\r\nimport StepTwoRegisterScreen from './Screens/StepTwoRegisterScreen';\r\nimport TemplateEditScreen from './Screens/templateEditScreen';\r\nimport PaymentsScreen from './Screens/PaymentsScreen';\r\nimport PurchasedTemplateScreen from './Screens/PurchasedTemplateScreen';\r\nimport UserListScreen from './Screens/UserListScreen';\r\nimport UserEditScreen from './Screens/UserEditScreen';\r\nimport TemplateListScreen from './Screens/TemplateListScreen';\r\nimport ProfileListScreen from './Screens/ProfileListScreen';\r\nimport ProfilesEditScreen from './Screens/ProfilesEditScreen';\r\nimport UserProfileSettings from './Screens/UserProfileSettings';\r\nimport WithdarawalListScreen from './Screens/WithdrawalListScreen';\r\nimport WithdrawalEditScreen from './Screens/WithdrawalEditScreen';\r\nimport CreateWithdrawalScreen from './Screens/CreateWithdrawalScreen';\r\nimport MyWithdarawalListScreen from './Screens/MyWithdrawalListScreen';\r\nimport BlogListScreen from './Screens/BlogListScreen';\r\nimport BlogDetailsScreen from './Screens/BlogDetailScreen';\r\nimport BlogScreeen from './Screens/BlogScreen';\r\nimport BlogEditScreen from './Screens/BlogEditScreen';\r\nimport ApplyForSellerScreen from './Screens/ApplyForSeller';\r\nimport SellerScreen from './Screens/SellerScreen';\r\nimport RulesAndRegScreen from './Screens/RulesAndRegScreen';\r\nimport TermsAndConditionScreen from './Screens/TermsAndConditionScreen';\r\nimport FaqScreen from './Screens/FaqScreen';\r\nimport AboutUsScreen from './Screens/AboutUsScreen';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <Header/>\r\n    <main className=\"py-3\">\r\n      <Container>\r\n        <Route path=\"/\" component={HomeScreen} exact/>\r\n        <Route path='/template/:id' component={TemplateScreen} />\r\n        <Route path='/admin/template/:id/edit' component={TemplateEditScreen} />\r\n        \r\n        <Route path=\"/login\" component={LoginScreen}/>\r\n        <Route path='/register' component={RegisterScreen} exact/>\r\n        <Route path='/register/two' component={StepTwoRegisterScreen} />\r\n        <Route path='/admin/userlist/' component={UserListScreen} />\r\n        <Route path='/admin/profilelist/' component={ProfileListScreen} />\r\n        <Route path='/admin/withdrawallist/' component={WithdarawalListScreen} />\r\n        <Route path='/profile' component={Profilescreen} exact/>\r\n        <Route path='/withdraw/' component={CreateWithdrawalScreen} />\r\n        <Route path='/profile/settings/:id/' component={UserProfileSettings}/>\r\n        <Route path='/payment/:id/' component={PaymentsScreen}  exact/>\r\n        <Route path='/download/:id/' component={PurchasedTemplateScreen} />\r\n        <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n        <Route path='/admin/profile/:id/edit' component={ProfilesEditScreen} />\r\n        <Route path='/admin/withdraw/:id/edit' component={WithdrawalEditScreen} />\r\n        <Route path='/admin/templatelist/' component={TemplateListScreen} />\r\n        <Route path='/mywithdrawal/' component={MyWithdarawalListScreen} />\r\n        <Route path='/blogs' component={BlogListScreen} exact/>\r\n        <Route path='/blog/:id/' component={BlogDetailsScreen}/>\r\n        <Route path='/admin/blogs' component={BlogScreeen} />\r\n        <Route path='/admin/blog/:id/edit/' component={BlogEditScreen} />\r\n        <Route path='/applyforseller/:id/pay/' component={ApplyForSellerScreen} />\r\n        <Route path='/sellers/' component={SellerScreen} />\r\n        <Route path='/terms/' component={TermsAndConditionScreen} />\r\n        <Route path='/rules' component={RulesAndRegScreen} exact/>\r\n        <Route path='/faq' component={FaqScreen} exact/>\r\n        <Route path='/aboutus' component={AboutUsScreen} exact/>\r\n        \r\n\r\n\r\n      </Container>\r\n\r\n    </main>\r\n    <Footer/>\r\n  </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { templatesListReducer , \r\ntemplateDetailsReducer, templateListMyReducer,\r\ntemplateCreateReducer,\r\ntemplateUpdateReducer,\r\ntemplateDeleteReducer,\r\ntemplatePurchaseReducer,\r\ntemplatePayReducer,purchasedTemplateReducer,\r\ntemplateCreateReviewReducer,\r\ntemplateTopReducer,\r\n} from './Reducers/templateReducer';\r\nimport { userLoginReducer ,\r\nuserDetailsReducer,\r\nuserRegisterReducer,\r\nuserRegisterTwoReducer,\r\nuserRegisterTwoDetailsReducer,\r\nuserListReducer,\r\nuserDeleteReducer,userUpdateReducer, myWalletReducer,\r\n depositWalletReducer, profileListReducer, profileUpdateReducer, \r\n profileDetailsReducer, profileDeleteReducer, withdrawalListReducer, \r\n withdrawalUpdateReducer,\r\n withdrawalDetailsReducer,\r\n withdrawalDeleteReducer,\r\n withdrawalCreateReducer,\r\n withdrawalListMyReducer,\r\n decreaseWalletReducer,\r\n profileUserUpdateReducer} from './Reducers/userReducer';\r\nimport { blogCreateReducer, blogCreateReviewReducer, blogDeleteReducer, blogDetailsReducer, blogListReducer, blogUpdateReducer } from './Reducers/blogReducer';\r\nimport { sellerDeleteReducer, sellerDetailsReducer, sellerFormCreateReducer, sellerListReducer, sellerPayReducer } from './Reducers/sellerFormReducer';\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    templateList : templatesListReducer,\r\n    templateDetails : templateDetailsReducer,\r\n    createTemplate: templateCreateReducer,\r\n    myTemplate: templateListMyReducer,\r\n    updateTemplate: templateUpdateReducer, \r\n    deleteTemplate: templateDeleteReducer,\r\n    templatePurchase: templatePurchaseReducer,\r\n    templatePay: templatePayReducer,\r\n    purchasedTemplate: purchasedTemplateReducer,\r\n    templateReview: templateCreateReviewReducer,\r\n    templateTopRated: templateTopReducer,\r\n\r\n    bloglist : blogListReducer,\r\n    blogDetails : blogDetailsReducer,\r\n    createBlog: blogCreateReducer,\r\n    deleteBlog: blogDeleteReducer,\r\n    updateBlog: blogUpdateReducer,\r\n    blogCreateReview: blogCreateReviewReducer,\r\n\r\n\r\n    createSellerForm: sellerFormCreateReducer,\r\n    sellerPay : sellerPayReducer,\r\n    sellerDetails : sellerDetailsReducer,\r\n    sellerList : sellerListReducer,\r\n    sellerDelete: sellerDeleteReducer,\r\n    \r\n\r\n    userLogin : userLoginReducer,\r\n    userRegister: userRegisterReducer ,\r\n    userDetails : userDetailsReducer,\r\n    userRegisterTwo: userRegisterTwoReducer,\r\n    userProfileMore: userRegisterTwoDetailsReducer,\r\n    usersList: userListReducer,\r\n    profilesList: profileListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate:userUpdateReducer,\r\n    profileUpdate:profileUpdateReducer,\r\n    profileUserUpdate:profileUserUpdateReducer,\r\n    profileDetails : profileDetailsReducer,\r\n    profileDelete: profileDeleteReducer,\r\n    withdrawalList: withdrawalListReducer,\r\n    withdrawalUpdate: withdrawalUpdateReducer,\r\n    withdrawalDetails : withdrawalDetailsReducer,\r\n    withdrawalDelete: withdrawalDeleteReducer,\r\n    createWithdrawal: withdrawalCreateReducer,\r\n    myWithdrawal: withdrawalListMyReducer,\r\n    userWallet: myWalletReducer,\r\n    depositWallet : depositWalletReducer,\r\n    decreaseWallet : decreaseWalletReducer,\r\n    \r\n    \r\n\r\n \r\n\r\n})\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ?\r\n    JSON.parse(localStorage.getItem(\"userInfo\")) : null\r\n\r\nconst userInfoTwoFromStorage = localStorage.getItem(\"profiles\") ?\r\n    JSON.parse(localStorage.getItem(\"profiles\")) : null\r\n\r\nconst initialState = {\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n    userProfileMore: {profiles: userInfoTwoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\nconst store = createStore(reducer,initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n    export default store","import { TEMPLATE_LIST_REQUEST,\r\n    TEMPLATE_LIST_SUCCESS,\r\n    TEMPLATE_LIST_FAIL,\r\n\r\n    TEMPLATE_DETAILS_REQUEST,\r\n    TEMPLATE_DETAILS_SUCCESS,\r\n    TEMPLATE_DETAILS_FAIL,\r\n\r\n    CREATE_TEMPLATE_REQUEST,\r\n    CREATE_TEMPLATE_SUCCESS,\r\n    CREATE_TEMPLATE_FAIL,\r\n    CREATE_TEMPLATE_RESET,\r\n\r\n    MY_TEMPLATE_REQUEST,\r\n    MY_TEMPLATE_SUCCESS,\r\n    MY_TEMPLATE_FAIL,\r\n    MY_TEMPLATE_RESET,\r\n\r\n    UPDATE_TEMPLATE_FAIL,\r\n    UPDATE_TEMPLATE_REQUEST,\r\n    UPDATE_TEMPLATE_SUCCESS,\r\n    UPDATE_TEMPLATE_RESET,\r\n\r\n    DELETE_TEMPLATE_FAIL,\r\n    DELETE_TEMPLATE_REQUEST,\r\n    DELETE_TEMPLATE_SUCCESS,\r\n\r\n    TEMPLATE_PURCHASE_SUCCESS,\r\n    TEMPLATE_PURCHASE_REQUEST,\r\n    TEMPLATE_PURCHASE_FAIL,\r\n    TEMPLATE_PURCHASE_RESET,\r\n\r\n    PAY_TEMPLATE_FAIL,\r\n    PAY_TEMPLATE_REQUEST,\r\n    PAY_TEMPLATE_SUCCESS,\r\n    PAY_TEMPLATE_RESET,\r\n\r\n    PAID_TEMPLATE_FAIL,\r\n    PAID_TEMPLATE_REQUEST,\r\n    PAID_TEMPLATE_SUCCESS,\r\n    PAID_TEMPLATE_RESET,\r\n\r\n    REVIEW_TEMPLATE_FAIL,\r\n    REVIEW_TEMPLATE_REQUEST,\r\n    REVIEW_TEMPLATE_SUCCESS,\r\n    REVIEW_TEMPLATE_RESET,\r\n    TEMPLATES_TOP_REQUEST,\r\n    TEMPLATES_TOP_SUCCESS,\r\n    TEMPLATES_TOP_FAIL,\r\n\r\n \r\n } from \"../Constants/templateConstant\"\r\n\r\nexport const templatesListReducer = (state= {templates : []}, action)=>{\r\n    switch (action.type) {\r\n        case TEMPLATE_LIST_REQUEST:\r\n            return {loading: true, templates:[]}\r\n            \r\n        case TEMPLATE_LIST_SUCCESS:\r\n            return {loading: false,\r\n                templates:action.payload.templates, \r\n                page:action.payload.page, \r\n                pages:action.payload.pages\r\n            }\r\n\r\n        case TEMPLATE_LIST_FAIL:\r\n            return {loading: false, error:action.payload}    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const templateDetailsReducer = (state= {template : {reviews: []}} , action)=>{\r\n    switch (action.type) {\r\n        case TEMPLATE_DETAILS_REQUEST:\r\n            return {loading: true, ...state}\r\n\r\n\r\n        case TEMPLATE_DETAILS_SUCCESS :\r\n            return {loading:false, template:action.payload}\r\n        \r\n        case TEMPLATE_DETAILS_FAIL :\r\n            return {loading: false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const templateCreateReducer = (state= {}, action)=>{\r\n    switch (action.type) {\r\n        case CREATE_TEMPLATE_REQUEST:\r\n            return {loading: true, }\r\n            \r\n        case CREATE_TEMPLATE_SUCCESS:\r\n            return {loading: false, success: true,\r\n                 templates:action.payload\r\n            }\r\n\r\n        case CREATE_TEMPLATE_FAIL:\r\n            return {loading: false, error:action.payload}  \r\n\r\n        case CREATE_TEMPLATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const templateListMyReducer = (state={templates: []}, action)=>{\r\n    switch (action.type) {\r\n        case MY_TEMPLATE_REQUEST:\r\n            return {loading: true, }\r\n            \r\n        case MY_TEMPLATE_SUCCESS:\r\n            return {loading: false, \r\n                templates:action.payload\r\n              \r\n            }\r\n\r\n        case MY_TEMPLATE_FAIL:\r\n            return {loading: false, error:action.payload}   \r\n            \r\n            \r\n        case MY_TEMPLATE_RESET:\r\n            return { templates: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const templateUpdateReducer = (state= {template : {}}, action)=>{\r\n    switch (action.type) {\r\n        case UPDATE_TEMPLATE_REQUEST:\r\n            return {loading: true, }\r\n            \r\n        case UPDATE_TEMPLATE_SUCCESS:\r\n            return {loading: false, success: true,\r\n                 template:action.payload\r\n            }\r\n\r\n        case UPDATE_TEMPLATE_FAIL:\r\n            return {loading: false, error:action.payload}  \r\n\r\n        case UPDATE_TEMPLATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const templateDeleteReducer = (state= {} , action)=>{\r\n    switch (action.type) {\r\n        case DELETE_TEMPLATE_REQUEST:\r\n            return {loading: true}\r\n\r\n\r\n        case DELETE_TEMPLATE_SUCCESS :\r\n            return {loading:false, success:true}\r\n        \r\n        case DELETE_TEMPLATE_FAIL :\r\n            return {loading: false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const templatePurchaseReducer = (state= {templatePurchase : {}} , action)=>{\r\n    switch (action.type) {\r\n        case TEMPLATE_PURCHASE_REQUEST:\r\n            return {loading: true, ...state}\r\n\r\n\r\n        case TEMPLATE_PURCHASE_SUCCESS :\r\n            return {loading:false, templatePurchase :action.payload}\r\n        \r\n        case TEMPLATE_PURCHASE_FAIL :\r\n            return {loading: false, error:action.payload}\r\n\r\n        case TEMPLATE_PURCHASE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const templatePayReducer = (state= {} , action)=>{\r\n    switch (action.type) {\r\n        case  PAY_TEMPLATE_REQUEST:\r\n            return {loading: true, }\r\n\r\n\r\n        case  PAY_TEMPLATE_SUCCESS :\r\n            return {loading:false, success:true}\r\n        \r\n        case PAY_TEMPLATE_FAIL :\r\n            return {loading: false, error:action.payload}\r\n\r\n        case PAY_TEMPLATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const purchasedTemplateReducer = (state= {purchaseTemplate : {}} , action)=>{\r\n    switch (action.type) {\r\n        case PAID_TEMPLATE_REQUEST:\r\n            return {loading: true, ...state}\r\n\r\n\r\n        case PAID_TEMPLATE_SUCCESS :\r\n            return {loading:false,\r\n                success:true,\r\n                 purchaseTemplate :action.payload}\r\n        \r\n        case PAID_TEMPLATE_FAIL :\r\n            return {loading: false, error:action.payload}\r\n\r\n        case PAID_TEMPLATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const templateCreateReviewReducer = (state= { } , action)=>{\r\n    switch (action.type) {\r\n        case REVIEW_TEMPLATE_REQUEST:\r\n            return {loading: true}\r\n\r\n\r\n        case REVIEW_TEMPLATE_SUCCESS :\r\n            return {loading:false, success:true, }\r\n\r\n\r\n        case REVIEW_TEMPLATE_FAIL :\r\n            return {loading:false, error:action.payload}\r\n\r\n        case REVIEW_TEMPLATE_RESET :\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const templateTopReducer = (state={templates: []}, action)=>{\r\n    switch (action.type) {\r\n        case TEMPLATES_TOP_REQUEST:\r\n            return {loading: true, }\r\n            \r\n        case TEMPLATES_TOP_SUCCESS:\r\n            return {loading: false, \r\n                templates:action.payload\r\n              \r\n            }\r\n\r\n        case TEMPLATES_TOP_FAIL:\r\n            return {loading: false, error:action.payload}   \r\n            \r\n            \r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    BLOG_LIST_REQUEST,\r\n    BLOG_LIST_SUCCESS,\r\n    BLOG_LIST_FAIL,\r\n    \r\n    BLOG_DETAILS_REQUEST,\r\n    BLOG_DETAILS_SUCCESS,\r\n    BLOG_DETAILS_FAIL,\r\n    \r\n    CREATE_BLOG_REQUEST,\r\n    CREATE_BLOG_SUCCESS,\r\n    CREATE_BLOG_FAIL,\r\n    CREATE_BLOG_RESET,\r\n    \r\n    UPDATE_BLOG_REQUEST,\r\n    UPDATE_BLOG_SUCCESS,\r\n    UPDATE_BLOG_FAIL,\r\n    UPDATE_BLOG_RESET,\r\n    \r\n    DELETE_BLOG_REQUEST,\r\n    DELETE_BLOG_SUCCESS,\r\n    DELETE_BLOG_FAIL,\r\n    DELETE_BLOG_RESET,\r\n    \r\n    BLOG_CREATE_REVIEW_REQUEST,\r\n    BLOG_CREATE_REVIEW_SUCCESS,\r\n    BLOG_CREATE_REVIEW_FAIL,\r\n    BLOG_CREATE_REVIEW_RESET,\r\n    \r\n    \r\n    \r\n    } from  '../Constants/blogConstants'\r\n    \r\n    \r\n    export const blogListReducer = (state= {blogs : []}, action)=>{\r\n        switch (action.type) {\r\n            case BLOG_LIST_REQUEST:\r\n                return {loading: true, blogs:[]}\r\n                \r\n            case BLOG_LIST_SUCCESS:\r\n                return {loading: false,\r\n                     blogs:action.payload\r\n                }\r\n    \r\n            case BLOG_LIST_FAIL:\r\n                return {loading: false, error:action.payload}    \r\n    \r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    \r\n    \r\n    export const blogDetailsReducer = (state= {blog : {reviews: []}} , action)=>{\r\n        switch (action.type) {\r\n            case BLOG_DETAILS_REQUEST:\r\n                return {loading: true, ...state}\r\n    \r\n    \r\n            case BLOG_DETAILS_SUCCESS :\r\n                return {loading:false, blog:action.payload}\r\n            \r\n            case BLOG_DETAILS_FAIL :\r\n                return {loading: false, error:action.payload}\r\n    \r\n            default:\r\n                return state\r\n        }\r\n    \r\n    }\r\n    \r\n    \r\n    export const blogCreateReducer = (state= {}, action)=>{\r\n        switch (action.type) {\r\n            case CREATE_BLOG_REQUEST:\r\n                return {loading: true, }\r\n                \r\n            case CREATE_BLOG_SUCCESS:\r\n                return {loading: false, success: true,\r\n                     blogs:action.payload\r\n                }\r\n    \r\n            case CREATE_BLOG_FAIL:\r\n                return {loading: false, error:action.payload}  \r\n    \r\n            case CREATE_BLOG_RESET:\r\n                return {}\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n     \r\n    \r\n    \r\n    export const blogUpdateReducer = (state= {blog : {}}, action)=>{\r\n        switch (action.type) {\r\n            case UPDATE_BLOG_REQUEST:\r\n                return {loading: true, }\r\n                \r\n            case UPDATE_BLOG_SUCCESS:\r\n                return {loading: false, success: true,\r\n                     blog:action.payload\r\n                }\r\n    \r\n            case UPDATE_BLOG_FAIL:\r\n                return {loading: false, error:action.payload}  \r\n    \r\n            case UPDATE_BLOG_RESET:\r\n                return {}\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    \r\n    \r\n    export const blogDeleteReducer = (state= {} , action)=>{\r\n        switch (action.type) {\r\n            case DELETE_BLOG_REQUEST:\r\n                return {loading: true}\r\n    \r\n    \r\n            case DELETE_BLOG_SUCCESS :\r\n                return {loading:false, success:true}\r\n            \r\n            case DELETE_BLOG_FAIL :\r\n                return {loading: false, error:action.payload}\r\n    \r\n            default:\r\n                return state\r\n        }\r\n    \r\n    }\r\n    \r\n    export const blogCreateReviewReducer = (state= { } , action)=>{\r\n        switch (action.type) {\r\n            case BLOG_CREATE_REVIEW_REQUEST:\r\n                return {loading: true}\r\n    \r\n    \r\n            case BLOG_CREATE_REVIEW_SUCCESS :\r\n                return {loading:false, success:true, }\r\n    \r\n    \r\n            case BLOG_CREATE_REVIEW_FAIL :\r\n                return {loading:false, error:action.payload}\r\n    \r\n            case BLOG_CREATE_REVIEW_RESET :\r\n                return {}\r\n    \r\n            default:\r\n                return state\r\n        }\r\n    \r\n    }\r\n    ","import { CREATE_SELLER_FORM_FAIL,\r\n     CREATE_SELLER_FORM_REQUEST, \r\n     CREATE_SELLER_FORM_RESET,\r\n      CREATE_SELLER_FORM_SUCCESS, \r\n\r\n      DELETE_SELLER_FORM_FAIL, \r\n\r\n      DELETE_SELLER_FORM_REQUEST, \r\n\r\n      DELETE_SELLER_FORM_SUCCESS, \r\n\r\n      SELLER_FORM_DETAILS_FAIL, \r\n\r\n      SELLER_FORM_DETAILS_REQUEST, \r\n\r\n      SELLER_FORM_DETAILS_RESET, \r\n\r\n      SELLER_FORM_DETAILS_SUCCESS, \r\n\r\n      SELLER_FORM_LIST_FAIL, \r\n\r\n      SELLER_FORM_LIST_REQUEST, \r\n\r\n      SELLER_FORM_LIST_SUCCESS, \r\n\r\n      SELLER_PAY_FAIL, \r\n      SELLER_PAY_REQUEST,\r\n      SELLER_PAY_RESET,\r\n      SELLER_PAY_SUCCESS} from \"../Constants/sellerFormConstants\"\r\n\r\n\r\n\r\n export const sellerFormCreateReducer = (state= {}, action)=>{\r\n    switch (action.type) {\r\n        case CREATE_SELLER_FORM_REQUEST:\r\n            return {loading: true, }\r\n            \r\n        case CREATE_SELLER_FORM_SUCCESS:\r\n            return {loading: false, success: true,\r\n                 sellers:action.payload\r\n            }\r\n\r\n        case CREATE_SELLER_FORM_FAIL:\r\n            return {loading: false, error:action.payload}  \r\n\r\n        case CREATE_SELLER_FORM_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const sellerPayReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case SELLER_PAY_REQUEST:\r\n            return {\r\n                \r\n                loading: true\r\n            }\r\n\r\n        case SELLER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case SELLER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case SELLER_PAY_RESET:\r\n            return  {}\r\n            \r\n    \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const sellerDetailsReducer = (state = { seller: {} }, action) => {\r\n    switch (action.type) {\r\n        case SELLER_FORM_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case SELLER_FORM_DETAILS_SUCCESS:\r\n            return { loading: false, seller: action.payload }\r\n\r\n        case SELLER_FORM_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case SELLER_FORM_DETAILS_RESET:\r\n            return { seller: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sellerListReducer = (state= {sellers : []}, action)=>{\r\n    switch (action.type) {\r\n        case SELLER_FORM_LIST_REQUEST:\r\n            return {loading: true, sellers:[]}\r\n            \r\n        case SELLER_FORM_LIST_SUCCESS:\r\n            return {loading: false,\r\n                 sellers:action.payload\r\n            }\r\n\r\n        case SELLER_FORM_LIST_FAIL:\r\n            return {loading: false, error:action.payload}    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const sellerDeleteReducer = (state= {} , action)=>{\r\n    switch (action.type) {\r\n        case DELETE_SELLER_FORM_REQUEST:\r\n            return {loading: true}\r\n\r\n\r\n        case DELETE_SELLER_FORM_SUCCESS :\r\n            return {loading:false, success:true}\r\n        \r\n        case DELETE_SELLER_FORM_FAIL :\r\n            return {loading: false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n","import { USER_LOGIN_REQUEST,\r\nUSER_LOGIN_SUCCESS,USER_LOGIN_FAIL,\r\nUSER_LOGOUT,\r\n\r\n\r\nUSER_REGISTER_SUCCESS,\r\nUSER_REGISTER_REQUEST,\r\nUSER_REGISTER_FAIL,\r\n\r\nUSER_DETAILS_REQUEST,\r\nUSER_DETAILS_SUCCESS,\r\nUSER_DETAILS_FAIL,\r\nUSER_DETAILS_RESET,\r\n\r\nUSER_REGISTER_TWO_FAIL,\r\nUSER_REGISTER_TWO_SUCCESS,\r\nUSER_REGISTER_TWO_REQUEST,\r\n\r\nUSER_REGISTER_TWO_DETAILS_FAIL,\r\nUSER_REGISTER_TWO_DETAILS_REQUEST,\r\nUSER_REGISTER_TWO_DETAILS_SUCCESS,\r\n\r\n\r\nUSER_LIST_FAIL,\r\nUSER_LIST_SUCCESS,\r\nUSER_LIST_REQUEST,\r\nUSER_LIST_RESET,\r\n\r\nUSER_DELETE_FAIL,\r\nUSER_DELETE_SUCCESS,\r\nUSER_DELETE_REQUEST,\r\n\r\nUSER_UPDATE_REQUEST,\r\nUSER_UPDATE_SUCCESS,\r\nUSER_UPDATE_FAIL,\r\nUSER_UPDATE_RESET,\r\n\r\nGET_MY_WALLET_REQUEST,\r\nGET_MY_WALLET_SUCCESS,\r\nGET_MY_WALLET_FAIL,\r\nGET_MY_WALLET_RESET,\r\n\r\n\r\nDEPOSIT_WALLET_REQUEST,\r\nDEPOSIT_WALLET_SUCCESS,\r\nDEPOSIT_WALLET_FAIL,\r\nDEPOSIT_WALLET_RESET,\r\n\r\n\r\nDECREASE_WALLET_REQUEST,\r\nDECREASE_WALLET_SUCCESS,\r\nDECREASE_WALLET_FAIL,\r\nDECREASE_WALLET_RESET,\r\n\r\nGET_WITHDRAWALS_REQUEST,\r\nGET_WITHDRAWALS_SUCCESS,\r\nGET_WITHDRAWALS_FAIL,\r\nGET_WITHDRAWALS_RESET,\r\n\r\nWITHDRAWAL_UPDATE_REQUEST,\r\nWITHDRAWAL_UPDATE_SUCCESS,\r\nWITHDRAWAL_UPDATE_FAIL,\r\nWITHDRAWAL_UPDATE_RESET,\r\n\r\n\r\nWITHDRAWAL_DETAILS_REQUEST,\r\nWITHDRAWAL_DETAILS_SUCCESS,\r\nWITHDRAWAL_DETAILS_FAIL,\r\nWITHDRAWAL_DETAILS_RESET,\r\n\r\n\r\nPROFILE_LIST_REQUEST,\r\nPROFILE_LIST_SUCCESS,\r\nPROFILE_LIST_FAIL,\r\nPROFILE_LIST_RESET,\r\n\r\nPROFILE_UPDATE_REQUEST,\r\nPROFILE_UPDATE_SUCCESS,\r\nPROFILE_UPDATE_FAIL,\r\nPROFILE_UPDATE_RESET,\r\n\r\nPROFILE_DETAILS_REQUEST,\r\nPROFILE_DETAILS_SUCCESS,\r\nPROFILE_DETAILS_FAIL,\r\nPROFILE_DETAILS_RESET,\r\n\r\nPROFILE_DELETE_REQUEST,\r\nPROFILE_DELETE_SUCCESS,\r\nPROFILE_DELETE_FAIL,\r\n\r\n\r\nWITHDRAWAL_DELETE_REQUEST,\r\nWITHDRAWAL_DELETE_SUCCESS,\r\nWITHDRAWAL_DELETE_FAIL,\r\n\r\nCREATE_WITHDRAWAL_REQUEST,\r\nCREATE_WITHDRAWAL_SUCCESS,\r\nCREATE_WITHDRAWAL_FAIL,\r\nCREATE_WITHDRAWAL_RESET,\r\nGET_MY_WITHDRAWAL_RESET,\r\nGET_MY_WITHDRAWAL_FAIL,\r\nGET_MY_WITHDRAWAL_SUCCESS,\r\nGET_MY_WITHDRAWAL_REQUEST,\r\n\r\n\r\nPROFILE_USER_UPDATE_REQUEST,\r\nPROFILE_USER_UPDATE_SUCCESS,\r\nPROFILE_USER_UPDATE_FAIL,\r\nPROFILE_USER_UPDATE_RESET,\r\nUSER_REGISTER_TWO_DETAILS_RESET,\r\n} from \"../Constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action)=>{\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n                return {loading:false, userInfo:action.payload}\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n            \r\n\r\n        case USER_LOGOUT:\r\n            return {}    \r\n            \r\n            \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action)=>{\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n                return {loading:false, userInfo:action.payload}\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}    \r\n                \r\n            \r\n       \r\n            \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterTwoReducer = (state = {}, action)=>{\r\n    switch (action.type) {\r\n        case USER_REGISTER_TWO_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_REGISTER_TWO_SUCCESS:\r\n                return {loading:false,  profiles:action.payload}\r\n\r\n        case USER_REGISTER_TWO_FAIL:\r\n            return {loading: false, error: action.payload}\r\n            \r\n       \r\n            \r\n    \r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterTwoDetailsReducer = (state= {}, action)=>{\r\n    switch (action.type) {\r\n        case USER_REGISTER_TWO_DETAILS_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_REGISTER_TWO_DETAILS_SUCCESS:\r\n                return {loading:false, profiles:action.payload}\r\n\r\n        case USER_REGISTER_TWO_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_REGISTER_TWO_DETAILS_RESET:\r\n            return {}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n            case USER_UPDATE_RESET:\r\n                return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//unwanted\r\nexport const myWalletReducer = (state = { wallets: [] }, action) => {\r\n    switch (action.type) {\r\n        case GET_MY_WALLET_REQUEST:\r\n            return { loading: true }\r\n\r\n        case GET_MY_WALLET_SUCCESS:\r\n            return { loading: false, wallets: action.payload }\r\n\r\n        case GET_MY_WALLET_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case GET_MY_WALLET_RESET:\r\n            return { wallets: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const depositWalletReducer = (state = {wallet:{}}, action) => {\r\n    switch (action.type) {\r\n        case DEPOSIT_WALLET_REQUEST:\r\n            return { loading: true }\r\n\r\n        case DEPOSIT_WALLET_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case DEPOSIT_WALLET_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n            case DEPOSIT_WALLET_RESET:\r\n                return { wallet: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const decreaseWalletReducer = (state = {wallet:{}}, action) => {\r\n    switch (action.type) {\r\n        case DECREASE_WALLET_REQUEST:\r\n            return { loading: true }\r\n\r\n        case DECREASE_WALLET_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case DECREASE_WALLET_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n            case DECREASE_WALLET_RESET:\r\n                return { wallet: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//un wanted\r\nexport const withdrawalListReducer = (state = { withdrawals: [] }, action) => {\r\n    switch (action.type) {\r\n        case GET_WITHDRAWALS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case GET_WITHDRAWALS_SUCCESS:\r\n            return { loading: false, withdrawals: action.payload }\r\n\r\n        case GET_WITHDRAWALS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case GET_WITHDRAWALS_RESET:\r\n            return { withdrawals: [] }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const withdrawalUpdateReducer = (state = {withdraw:{}}, action) => {\r\n    switch (action.type) {\r\n        case WITHDRAWAL_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case WITHDRAWAL_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case WITHDRAWAL_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n            case WITHDRAWAL_UPDATE_RESET:\r\n                return { withdraw: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const withdrawalDetailsReducer = (state = { withdrawal: {} }, action) => {\r\n    switch (action.type) {\r\n        case WITHDRAWAL_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case WITHDRAWAL_DETAILS_SUCCESS:\r\n            return { loading: false, withdrawal: action.payload }\r\n\r\n        case WITHDRAWAL_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case WITHDRAWAL_DETAILS_RESET:\r\n            return { withdrawal: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const withdrawalDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case WITHDRAWAL_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case WITHDRAWAL_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case WITHDRAWAL_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const withdrawalCreateReducer = (state= {}, action)=>{\r\n    switch (action.type) {\r\n        case CREATE_WITHDRAWAL_REQUEST:\r\n            return {loading: true, }\r\n            \r\n        case CREATE_WITHDRAWAL_SUCCESS:\r\n            return {loading: false, success: true,\r\n                 withdrawals:action.payload\r\n            }\r\n\r\n        case CREATE_WITHDRAWAL_FAIL:\r\n            return {loading: false, error:action.payload}  \r\n\r\n        case CREATE_WITHDRAWAL_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const withdrawalListMyReducer = (state={withdrawals: []}, action)=>{\r\n    switch (action.type) {\r\n        case GET_MY_WITHDRAWAL_REQUEST:\r\n            return {loading: true,  }\r\n            \r\n        case GET_MY_WITHDRAWAL_SUCCESS:\r\n            return {loading: false, \r\n                withdrawals:action.payload\r\n            }\r\n\r\n        case GET_MY_WITHDRAWAL_FAIL:\r\n            return {loading: false, error:action.payload}   \r\n            \r\n            \r\n        case GET_MY_WITHDRAWAL_RESET:\r\n            return { withdrawals: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const profileListReducer = (state = { profiles: [] }, action) => {\r\n    switch (action.type) {\r\n        case PROFILE_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PROFILE_LIST_SUCCESS:\r\n            return { loading: false, profiles: action.payload }\r\n\r\n        case PROFILE_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PROFILE_LIST_RESET:\r\n            return { profiles: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const profileUpdateReducer = (state = {profile:{}}, action) => {\r\n    switch (action.type) {\r\n        case PROFILE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PROFILE_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PROFILE_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n            case PROFILE_UPDATE_RESET:\r\n                return { profile: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const profileUserUpdateReducer = (state = {profile:{}}, action) => {\r\n    switch (action.type) {\r\n        case PROFILE_USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PROFILE_USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PROFILE_USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n            case PROFILE_USER_UPDATE_RESET:\r\n                return { profile: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const profileDetailsReducer = (state = { profile: {} }, action) => {\r\n    switch (action.type) {\r\n        case PROFILE_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case PROFILE_DETAILS_SUCCESS:\r\n            return { loading: false, profile: action.payload }\r\n\r\n        case PROFILE_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PROFILE_DETAILS_RESET:\r\n            return { profile: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const profileDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PROFILE_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PROFILE_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PROFILE_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store'\r\nimport {Provider} from  'react-redux'\r\nimport './Blui.min.css'\r\n//import './bootstrapCopy2.min.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}